<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stone OpenBank – Guias</title>
    <link>https://stone-co.github.io/docs/guias/</link>
    <description>Recent content in Guias on Stone OpenBank</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 28 Jun 2021 09:00:00 -0300</lastBuildDate>
    
	  <atom:link href="https://stone-co.github.io/docs/guias/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: STONE OPEN BANKING</title>
      <link>https://stone-co.github.io/docs/guias/stone-open-banking/</link>
      <pubDate>Thu, 05 Aug 2021 15:40:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/guias/stone-open-banking/</guid>
      <description>
        
        
        &lt;br&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Seja bem-vindo à documentação de Open Banking da Stone!&lt;/strong&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Segundo o Banco Central, o Open Banking / Open Finance, ou sistema financeiro aberto, é a possibilidade de clientes de produtos e serviços financeiros permitirem o compartilhamento de suas informações entre diferentes instituições autorizadas pelo Banco Central e a movimentação de suas contas bancárias a partir de diferentes plataformas e não apenas pelo aplicativo ou site do banco, de forma segura, ágil e conveniente.&lt;/p&gt;
&lt;p&gt;Como na Stone somos fiéis defensores da competição e temos o cliente como nossa razão de existir, acreditamos na revolução proporcionada por esse sistema e construímos a primeira API de Open Banking plugada diretamente no coração do STR. Acreditamos que nosso produto poderá gerar novos modelos de negócios, dar maior controle e transparência, além de permitir automatizações e ganho de eficiência para as empresas.&lt;/p&gt;
&lt;p&gt;A partir da integração e do uso da API Stone Open Banking, você poderá movimentar a sua própria conta Stone por meio de uma API RESTful com todas as funcionalidades de cash-in e cash-out. Caso você tenha uma plataforma, também poderá solicitar acesso a contas terceiras para disponibilizar funcionalidades financeiras e agregar ainda mais valor ao seu produto. É claro que para acessar e iniciar transações em contas terceiras, será preciso obter o Consentimento do usuário dono da conta, um conceito essencial para o bom funcionamento do Open Banking.&lt;/p&gt;
&lt;p&gt;Nesta documentação, você pode explorar todos os produtos e funcionalidades que a nossa API oferece! Além disso, como todas as chamadas em nossa API deverão ser autenticadas para identificação do sujeito de cada ação, vamos detalhar como funciona o acesso via token.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Para iniciar, confira um passo a passo da nossa integração abaixo aqui no &lt;a href=&#34;https://stone-co.github.io/docs/guias/stone-open-banking/#quickstart&#34;&gt;Quickstart&lt;/a&gt;!&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;quickstart&#34;&gt;Quickstart&lt;/h2&gt;
&lt;hr&gt;
&lt;h5 id=&#34;contato-comercial&#34;&gt;Contato Comercial&lt;/h5&gt;
&lt;p&gt;Para realizar chamadas em nossa API, primeiro precisamos que você preencha este &lt;a href=&#34;https://app.pipefy.com/public/form/Qz4ptt_W/?origem_do_lead=Documenta%C3%A7%C3%A3o&#34; target=&#34;_blank&#34;&gt;formulário&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nosso time de parcerias entrará em contato em até 24 horas para entender seu modelo de negócio e te apresentar a proposta mais adequada.&lt;/p&gt;
&lt;p&gt;Você também receberá um contrato para formalização da parceria.&lt;/p&gt;
&lt;p&gt;Por enquanto, ainda não estamos realizando onboarding de parceiros em autosserviço, mas queremos liberar isso em breve!
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&#34;testes-em-sandbox&#34;&gt;Testes em Sandbox&lt;/h5&gt;
&lt;p&gt;Após o contato com nosso time, você receberá o formulário para testes em ambiente de Sandbox, que deverá ser preenchido contendo a sua &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#gerar-chaves-de-acesso&#34;&gt;Chave Pública&lt;/a&gt;.
Quando recebermos essa chave, faremos o &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#cadastro-da-aplicação&#34;&gt;Cadastro da sua Aplicação&lt;/a&gt; e te retornaremos um ClientID, o seu identificador único aqui na Stone.&lt;/p&gt;
&lt;p&gt;Com o ClientID em mãos, você já pode fazer o processo de &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#autenticação&#34;&gt;Autenticação&lt;/a&gt;, que terá como resultado a liberação do seu Access Token ou &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#overview&#34;&gt;Token de Acesso&lt;/a&gt; e realizar as &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#chamada-autenticada&#34;&gt;chamadas autenticadas&lt;/a&gt; em Sandbox.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Pronto!&lt;/strong&gt; Agora você já pode começar os testes e realizar ações em nossa API - em ambiente de Sandbox.
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&#34;homologação&#34;&gt;Homologação&lt;/h5&gt;
&lt;p&gt;Assim que os testes em Sandbox forem finalizados, vamos te guiar no processo de Homologação.&lt;/p&gt;
&lt;p&gt;Esse processo consiste em executar todas as ações que a sua aplicação tem permissão para fazer, numa sequência definida e com o acompanhamento e registro pela equipe da Stone.&lt;/p&gt;
&lt;p&gt;O objetivo é garantir que tudo esteja funcionando como esperado e que você tenha acesso a todos os recursos necessários.
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&#34;produção&#34;&gt;Produção&lt;/h5&gt;
&lt;p&gt;Finalmente, para integrar em ambiente de Produção, você vai nos enviar uma nova Chave Pública - iremos solicitar em um Formulário para Virada em Produção - para que a gente gere o seu ClientID de Produção. Você vai realizar as mesmas etapas que já fez para obtenção do Access Token em Sandbox, que permitirá a realização de &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#chamada-autenticada&#34;&gt;Chamadas Autenticadas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Caso você tenha uma plataforma, ERP ou outro sistema e deseje realizar ações em uma conta de outro usuário (um cliente seu, por exemplo), você deverá pedir o &lt;a href=&#34;https://stone-co.github.io/docs/guias/consentimento/&#34;&gt;Consentimento&lt;/a&gt; dele para realização das chamadas. Caso seja para sua própria conta, pode desconsiderar esse processo, mas lembre-se de que você precisará &lt;a href=&#34;https://stone-co.github.io/docs/guias/conta-de-pagamento/#abertura-de-conta&#34;&gt;abrir uma Conta Stone&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Atenção!&lt;/strong&gt; Ressaltamos que os dois ambientes disponíveis são completamente separados, ou seja, usuários criados em ambiente de Sandbox não existem em Produção e vice-versa. Vale lembrar que os ambientes, em termos de funcionalidades, são exatamente iguais.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Importante!&lt;/strong&gt; O acesso ao ambiente de Produção só será liberado depois que os testes em Sandbox forem realizados e o roteiro de Homologação for validado.&lt;/p&gt;
&lt;p&gt;Confira abaixo as URLs para acesso aos ambientes:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ambiente&lt;/th&gt;
&lt;th&gt;Endpoint de acesso&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Sandbox&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://sandbox-api.openbank.stone.com.br&#34;&gt;https://sandbox-api.openbank.stone.com.br&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Produção&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://api.openbank.stone.com.br&#34;&gt;https://api.openbank.stone.com.br&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: TOKEN DE ACESSO</title>
      <link>https://stone-co.github.io/docs/guias/token-de-acesso/</link>
      <pubDate>Mon, 28 Jun 2021 09:00:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/guias/token-de-acesso/</guid>
      <description>
        
        
        &lt;br&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
Para realizar chamadas na API Stone Open Banking, será necessário ter em mãos um Token de Acesso ou Access Token. 
&lt;br&gt;O Token de Acesso gerado será no formato JWT e funcionará como uma chave de acesso para todas as requisições na API. 
&lt;br&gt;
&lt;br&gt;
O JWT é um padrão (RFC-7519) de mercado que define como transmitir e armazenar objetos JSON de forma compacta e segura entre diferentes aplicações. Os dados nele contidos podem ser validados a qualquer momento, pois o token é assinado digitalmente.
&lt;br&gt;
&lt;br&gt;
Para receber esse Token de Acesso, será necessário que você gere um JWT local, com suas partes em base64 já decodificadas e que deverá ser formado por três seções:


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    &lt;p&gt;&lt;strong&gt;Header:&lt;/strong&gt; é um objeto JSON que define informações sobre o tipo do token (typ) - nesse caso JWT - e o algoritmo de criptografia usado em sua assinatura (alg) - no nosso caso usamos sempre o RS256.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Payload:&lt;/strong&gt; é um objeto JSON com as Claims (informações/alegações) da entidade tratada. São as informações que o JWT carrega, tipicamente a data de expiração do token (&amp;ldquo;EXPiration date&amp;rdquo;), quem gerou aquele token (&amp;ldquo;ISSuer&amp;rdquo;), quando (&amp;ldquo;Instanciated AT&amp;rdquo;), quem deve consumi-lo (&amp;ldquo;AUDience&amp;rdquo;) e o que mais for necessário entre as partes — como por exemplo um ID de usuário. Para essa etapa, você precisará de um ClientID, ou seja, o identificador recebido após a realização do &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#cadastro-da-aplica%C3%A7%C3%A3o&#34;&gt;Cadastro da sua Aplicação&lt;/a&gt; com a Stone. &lt;br&gt;Além disso, você deverá preencher as Claims conforme nosso processo de &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#autentica%C3%A7%C3%A3o&#34;&gt;Autenticação&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Signature:&lt;/strong&gt; é a assinatura única de cada token que é gerada a partir de um algoritmo de criptografia e tem seu corpo com base no header, no payload e na chave secreta definida pela aplicação. A assinatura é que vai garantir a integridade do token, se ele foi modificado e se realmente foi gerado por você. Para essa etapa, você já deve ter &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#gerar-chaves-de-acesso&#34;&gt;gerado um par de chaves&lt;/a&gt;.&lt;/p&gt;


&lt;/div&gt;

&lt;p&gt;Após a geração do token local formado acima, é preciso fazer uma chamada para o nosso servidor de &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#autenticação&#34;&gt;Autenticação&lt;/a&gt; para que a gente faça a validação e retorne o Token de Acesso.&lt;/p&gt;
&lt;p&gt;Provido com o Token de Acesso (token que já foi autenticado), você poderá acessar os endpoints da aplicação, que antes estavam restritos. Para realizar esse acesso, é preciso informar esse token no header Authorization da requisição e, por convenção, após a palavra Bearer.&lt;/p&gt;
&lt;p&gt;Em seguida, vamos te guiar para realizar as seguintes etapas para obtenção do seu Token de Acesso:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#gerar-chaves-de-acesso&#34;&gt;Gerar um par de chaves de acesso&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#cadastro-da-aplicação&#34;&gt;Cadastrar  sua Aplicação&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#autenticação&#34;&gt;Fazer a Autenticação&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#chamada-autenticada&#34;&gt;Realizar Chamada Autenticada&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;gerar-chaves-de-acesso&#34;&gt;Gerar Chaves de acesso&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
Para obter o seu Access Token, será necessário gerar um par de chaves RSA 4096. Você deverá assinar o JWT com a chave privada e nos enviar a chave pública no formato PEM e extensão .pub. &lt;br&gt;&lt;br&gt;
&lt;p&gt;Embora existam vários métodos para criação de pares de chaves pública e privada, a ferramenta OpenSSL de código aberto é uma das mais usadas, por isso, recomendamos o seu uso.&lt;/p&gt;
&lt;p&gt;Em todas as plataformas disponíveis - Linux, MacOS e Windows, os comandos do OpenSSL são iguais: &lt;br&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;   $ openssl genrsa -out mykey.pem &lt;span style=&#34;color:#bd93f9&#34;&gt;4096&lt;/span&gt;
   $ openssl rsa -in mykey.pem -pubout &amp;gt; mykey.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Algumas dicas importantes:&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    &lt;p&gt;Linux: é uma ferramenta padrão que já vem instalada em quase todas as distribuições.&lt;/p&gt;
&lt;p&gt;MacOS: há algumas formas de instalar, sendo o uso da ferramenta “brew” um dos mais simples.&lt;/p&gt;
&lt;p&gt;Windows: é possível adquiri-la através da &lt;a href=&#34;https://slproweb.com/products/Win32OpenSSL.html&#34;&gt;Página de Download&lt;/a&gt; e obter detalhes sobre o processo de instalação através do &lt;a href=&#34;https://tecadmin.net/install-openssl-on-windows/&#34;&gt;Tutorial de Instalação&lt;/a&gt;. Após a instalação, você deve acrescentar o caminho do programa na variável PATH e adicionar mais uma variável OPENSSL_CONF ao arquivo openssl.cfg, que normalmente vai ser &amp;ldquo;C:\Program Files\OpenSSL-Win64\bin\openssl.cfg&amp;rdquo;. Atente-se para ajustar o caminho para o local onde você instalou a ferramenta.&lt;/p&gt;


&lt;/div&gt;

&lt;p&gt;Agora você já pode gerar o seu par de chaves. A chave pública será solicitada pelo nosso time durante a integração. Nós deixamos a chave pública guardada de forma segura e a usaremos para validar o seu token num processo de criptografia assimétrica. &lt;br&gt;&lt;strong&gt;A chave que deverá ser enviada para a Stone através do formulário de integração é sempre a chave pública (arquivo .pub).&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Atenção!&lt;/strong&gt;&lt;br&gt;
&lt;br&gt;Você nunca deve compartilhar a chave privada (arquivo.pem)! A chave privada deve ser armazenada de forma segura por você. &lt;br&gt;Em posse da sua chave privada, qualquer aplicação pode decodificar a assinatura e verificar se ela é válida. &lt;br&gt; Por isso destacamos a importância de manter essa informação em segredo.&lt;/p&gt;
&lt;p&gt;Depois de obter seu par de chaves, você está pronto para iniciar conosco o &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#cadastro-da-aplicação&#34;&gt;Cadastro da Aplicação&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;cadastro-da-aplicação&#34;&gt;Cadastro da Aplicação&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;Qualquer parceiro ou cliente que deseje acessar e/ou movimentar a sua conta ou de terceiros pela nossa API precisará ter sua aplicação identificada. O identificador que representa a sua aplicação na Stone é chamado ClientID.&lt;/p&gt;
&lt;p&gt;O ClientID será usado no processo de Autenticação, permitindo a identificação da origem dos requests feitos por API. Ou seja, ele será usado no seu Token de Acesso para realizar chamadas. O ClientID é gerado pela Stone, é único e não será alterado posteriormente.&lt;/p&gt;
&lt;p&gt;Para obter um ClientID, você deverá entrar em &lt;a href=&#34;https://app.pipefy.com/public/form/Qz4ptt_W/?origem_do_lead=Documenta%C3%A7%C3%A3o&#34;&gt;contato&lt;/a&gt; com nosso time comercial. Em seguida, pediremos algumas informações para cadastrar sua aplicação. Nesse formulário, será necessário enviar ao time da Stone:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A sua &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#gerar-chaves-de-acesso&#34;&gt;chave pública&lt;/a&gt; - que será atrelada ao cadastro da sua aplicação.&lt;/li&gt;
&lt;li&gt;Uma URI de Redirect - precisamos de um local público para redirecionarmos o usuário final depois que ele aprovar ou reprovar o &lt;a href=&#34;https://stone-co.github.io/docs/guias/consentimento/#overview&#34;&gt;Consentimento&lt;/a&gt; de acesso à sua plataforma. Caso você esteja fazendo a integração para acesso à sua própria conta, pode desconsiderar essa etapa.&lt;/li&gt;
&lt;li&gt;Uma URI de webhooks - precisamos de um local público para enviar mudanças de estado das contas para aplicações. Essa URI irá receber as informações dos webhooks para seu processamento.&lt;/li&gt;
&lt;li&gt;Sua linguagem de desenvolvimento - nossa infraestrutura disponibiliza uma API RESTful com respostas em JSON.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Após o recebimento de todas as informações e cadastro da sua aplicação, enviaremos o seu ClientID por e-mail.&lt;/p&gt;
&lt;p&gt;Atenção! O ClientID será enviado para o e-mail identificado no formulário como dono da aplicação. Caso você queira movimentar a sua própria conta, esse e-mail deverá ser o mesmo cadastrado no momento de &lt;a href=&#34;https://stone-co.github.io/docs/guias/conta-de-pagamento/#abertura-de-conta&#34;&gt;abertura da Conta&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pronto! Com seu ClientID em mãos, você já pode realizar o processo de &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#autenticação&#34;&gt;Autenticação&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;autenticação&#34;&gt;Autenticação&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;Para realizar o processo de Autenticação, você deverá enviar uma requisição ao nosso servidor contendo um JWT. O JWT enviado deverá conter as credenciais da sua aplicação (&lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#cadastro-da-aplicação&#34;&gt;ClientID&lt;/a&gt; e deverá ser assinado com a chave privada. Ao receber o request, faremos o processo de validação do token enviado, pois já teremos recebido e armazenado a sua chave pública.&lt;/p&gt;
&lt;p&gt;Uma vez que o token seja válido e tenha sido autenticado em nosso servidor, enviaremos como resposta o Access Token, ou seja, o seu Token de Acesso. &lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&#34;padrões-utilizados-na-autenticação&#34;&gt;&lt;strong&gt;Padrões utilizados na Autenticação&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;Para facilitar ao máximo a integração com nossa API, escolhemos padrões estabelecidos no mercado para realização do processo de autenticação - descritos abaixo.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OAuth 2.0&lt;/strong&gt; é um padrão de autorização que vai permitir ao usuário conceder acesso limitado a recursos na Conta Stone para aplicações sem a necessidade de expor suas credenciais. Isso significa que o cliente não precisará compartilhar login e senha com ninguém.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OpenID Connect&lt;/strong&gt; é uma camada de identidade construída em cima do OAuth 2.0 que permite a fácil verificação da identidade do usuário, bem como a capacidade de obter informações básicas de perfil do provedor de identidade - no nosso caso, a Conta Stone. &lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&#34;especificações-do-jwt-para-realizar-autenticação&#34;&gt;&lt;strong&gt;Especificações do JWT para realizar autenticação&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;Primeiramente, temos que gerar um token JWT local para conseguir fazer a autenticação com sucesso. Esse token deverá ser preenchido com as claims com os seguintes valores:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Nome&lt;/th&gt;
&lt;th&gt;Valor&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;exp&lt;/td&gt;
&lt;td&gt;Tempo de expiração do token em segundos desde o início da era UNIX (1970). É UTC e não pode ser maior que 15 minutos. Exemplo: &amp;ldquo;exp&amp;rdquo;: 1542235633&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nbf&lt;/td&gt;
&lt;td&gt;&amp;ldquo;Not before&amp;rdquo;, ou seja, data a partir da qual o token é válido. É UTC. Exemplo: &amp;ldquo;nbf&amp;rdquo;: 1542235633&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aud&lt;/td&gt;
&lt;td&gt;Quem é a &amp;ldquo;audiência&amp;rdquo; deste token. No caso, é o nosso servidor de autenticação. &lt;br&gt;Para o ambiente de Sandbox será: &lt;a href=&#34;https://sandbox-accounts.openbank.stone.com.br/auth/realms/stone_bank&#34;&gt;https://sandbox-accounts.openbank.stone.com.br/auth/realms/stone_bank&lt;/a&gt;. &lt;br&gt;Para Produção será: &lt;a href=&#34;https://accounts.openbank.stone.com.br/auth/realms/stone_bank&#34;&gt;https://accounts.openbank.stone.com.br/auth/realms/stone_bank&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;realm&lt;/td&gt;
&lt;td&gt;Qual é o &amp;ldquo;reino&amp;rdquo; dos nossos usuários. Será sempre &amp;ldquo;stone_bank&amp;rdquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sub&lt;/td&gt;
&lt;td&gt;O sujeito referente ao token. Deve ser o ClientID enviado ao desenvolvedor após o cadastro da aplicação.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clientId&lt;/td&gt;
&lt;td&gt;Mesmo valor de sub, ou seja, o ClientID enviado ao desenvolvedor após o cadastro da aplicação.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jti&lt;/td&gt;
&lt;td&gt;Identificador único do token gerado. Normalmente se utiliza um UUID, mas não é obrigatório usar esse formato desde que a unicidade seja garantida. &lt;a href=&#34;https://tools.ietf.org/html/rfc7519#section-4.1.7&#34;&gt;Mais informações&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iat&lt;/td&gt;
&lt;td&gt;Momento em que o token foi gerado. É UTC. Exemplo: &amp;ldquo;iat&amp;rdquo;: 1542235633&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iss&lt;/td&gt;
&lt;td&gt;Mesmo valor de sub e clientId, ou seja, o ClientID enviado ao desenvolvedor após o cadastro da aplicação.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Após gerar esse token localmente, partiremos para receber o access_token e realizar as &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#chamada-autenticada&#34;&gt;chamadas autenticadas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;O request para receber o access_token é realizado através do método POST com as informações abaixo:
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Header&lt;/strong&gt;&lt;br&gt;Na nossa API, usaremos sempre o algoritmo &lt;strong&gt;RS256&lt;/strong&gt;. Esse algoritmo especificado nessa RFC usa criptografia “RSASSA-PKCS1-v1_5 com SHA-256”.
Abaixo você encontrará um exemplo de header.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;alg&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;RS256&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;typ&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;JWT&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A chamada é com o método &lt;strong&gt;POST&lt;/strong&gt;, com os headers &lt;strong&gt;Content-Type&lt;/strong&gt; e &lt;strong&gt;User-Agent&lt;/strong&gt;. &lt;br&gt;O &lt;strong&gt;Content-Type&lt;/strong&gt; informado deve ser &lt;strong&gt;x-www-form-urlencoded&lt;/strong&gt; (o mesmo usado por submissão de formulários HTML) e o header &lt;strong&gt;User-Agent&lt;/strong&gt; deve estar habilitado com o nome da sua aplicação. Verifique o exemplo abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;user-agent&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Nome da aplicação&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;content-type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;application/x-www-form-urlencoded&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Payload&lt;/strong&gt; &lt;br&gt;É um objeto JSON que trará as informações que usaremos para verificar a autenticidade da chamada e retornar o Token de Acesso. É necessário enviar o campo &lt;code&gt;client_id&lt;/code&gt;, o campo &lt;code&gt;grant_type&lt;/code&gt;, que será um campo de valor fixo (&lt;strong&gt;client_credentials&lt;/strong&gt;), o campo &lt;code&gt;client_assertion&lt;/code&gt;, que será o token gerado localmente citado acima, e por último o campo &lt;code&gt;client_assertion_type&lt;/code&gt;, que também terá seu valor fixo (&lt;strong&gt;urn:ietf:params:oauth:client-assertion-type:jwt-bearer&lt;/strong&gt;), fechando o fluxo de client credentials para o servidor.&lt;/p&gt;
&lt;br&gt;
Esse request deverá ser realizado nas seguintes URLs (por ambiente):
&lt;br&gt;&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ambiente&lt;/th&gt;
&lt;th&gt;Endpoint de Acesso&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Sandbox&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://sandbox-accounts.openbank.stone.com.br/auth/realms/stone_bank/protocol/openid-connect/token&#34;&gt;https://sandbox-accounts.openbank.stone.com.br/auth/realms/stone_bank/protocol/openid-connect/token&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Produção&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://accounts.openbank.stone.com.br/auth/realms/stone_bank/protocol/openid-connect/token&#34;&gt;https://accounts.openbank.stone.com.br/auth/realms/stone_bank/protocol/openid-connect/token&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Você deverá receber como resposta um JSON com uma chave, ou seja, o seu Token de Acesso, que permitirá que você faça &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#chamada-autenticada&#34;&gt;Chamadas Autenticadas&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;chamada-autenticada&#34;&gt;Chamada autenticada&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Após realizar o processo de &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#autenticação&#34;&gt;Autenticação&lt;/a&gt; e receber como resposta o seu Token de Acesso, basta colocá-lo no header Authorization. Você irá usar o valor recebido para preenchimento do Bearer ACCESS_TOKEN de todas as chamadas realizadas em nossa API.&lt;/p&gt;
&lt;p&gt;Além do Token de acesso, é necessário preencher sempre no header o campo &lt;strong&gt;User-Agent&lt;/strong&gt;, que deve estar habilitado com o nome da sua aplicação.&lt;/p&gt;
&lt;p&gt;Para realizar chamadas autenticadas em nossa API, disponibilizamos as seguintes URLs: &lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ambiente&lt;/th&gt;
&lt;th&gt;Endpoint de Acesso&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Sandbox&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://sandbox-api.openbank.stone.com.br&#34;&gt;https://sandbox-api.openbank.stone.com.br&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Produção&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://api.openbank.stone.com.br&#34;&gt;https://api.openbank.stone.com.br&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Não solicite um token por chamada!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;O access_token possui duração de 15 minutos e você deve utilizar esse mesmo token durante todo seu período de utilização, não importa quais e quantas chamadas diferentes sua aplicação irá fazer nesse período.&lt;/p&gt;

&lt;/div&gt;

&lt;p&gt;A seguir, vamos te guiar pela seção &lt;a href=&#34;https://stone-co.github.io/docs/guias/conta-de-pagamento/&#34;&gt;Conta de Pagamento&lt;/a&gt;, onde você poderá entender mais sobre as características do nosso negócio e sobre o processo de abertura de conta.&lt;/p&gt;
&lt;h2 id=&#34;collection-do-postman&#34;&gt;Collection do Postman&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Para ajudar na realização das chamadas autenticadas, disponibilizamos alguns endpoints e códigos prontos!&lt;/p&gt;
&lt;p&gt;Você pode baixar clicando nos links abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;link-para-consentimento.zip&#34; download=&#34;Link de consentimento&#34;&gt;Código em JS para geração do link de consentimento&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;get_token_p parceiros.zip&#34; download=&#34;Token de autenticação&#34;&gt;Código em Python para geração do token de autenticação&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Criar-conta-Stone.zip&#34; download=&#34;Criação de conta&#34;&gt;Código em Python para pedido de criação para contas Stone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Criar_Pagamentos.zip&#34; download=&#34;Criar_Pagamentos&#34;&gt;Collection do Postman para criar Pagamentos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Pix_out.zip&#34; download=&#34;Pix_out&#34;&gt;Collection do Postman para realização de Pix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Transferencias.zip&#34; download=&#34;Transferências&#34;&gt;Collection do Postman para Transferências&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Dados_da_Conta.zip&#34; download=&#34;Dados da Conta&#34;&gt;Collection do Postman para Dados da Conta (inclui extrato)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Simulacoes(dry-run).zip&#34; download=&#34;Dry-run&#34;&gt;Collection do Postman para Simulações(Dry-run)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Comprovantes.zip&#34; download=&#34;Comprovantes&#34;&gt;Collection do Postman para emissão de Comprovantes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Link_de_pagamento.zip&#34; download=&#34;Link de Pagamento&#34;&gt;Collection do Postman para Link de Pagamento&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Recargas.zip&#34; download=&#34;Recargas&#34;&gt;Collection do Postman para Recargas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Boletos.zip&#34; download=&#34;Boletos&#34;&gt;Collection do Postman para Boletos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: CONTA DE PAGAMENTO</title>
      <link>https://stone-co.github.io/docs/guias/conta-de-pagamento/</link>
      <pubDate>Mon, 28 Jun 2021 09:00:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/guias/conta-de-pagamento/</guid>
      <description>
        
        
        &lt;br&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;Somos uma Instituição de Pagamentos emissora de moeda eletrônica autorizada pelo Banco Central e por isso podemos oferecer uma Conta de Pagamento.
&lt;br&gt;Nesse tipo de conta, os recursos devem ser depositados previamente, ou seja, oferecemos uma conta do tipo pré-paga aos nossos clientes. Dessa forma, não haverá geração de fatura nem saldo negativo.&lt;/p&gt;
&lt;p&gt;Através de uma conta de pagamento, você tem acesso a serviços financeiros sem precisar ir a um banco. É possível fazer e receber Pix, TEDs, como também realizar o pagamento de boletos e outros serviços básicos de uma conta corrente.
&lt;br&gt;Além disso, toda a gestão da conta pode ser feita online, simplificando atividades do dia a dia. Inclusive, para abrir uma conta, você não precisa se deslocar até uma agência. Mesmo assim, se precisar de alguém para te ajudar, a Stone está disponível para contato.&lt;/p&gt;
&lt;p&gt;Caso ainda não possua uma conta para movimentar por meio do seu Token de Acesso, você pode realizar o processo de &lt;a href=&#34;https://stone-co.github.io/docs/guias/conta-de-pagamento/#abertura-de-conta&#34;&gt;Abertura de Conta&lt;/a&gt; pelo nosso App (disponível para &lt;a href=&#34;https://apps.apple.com/br/app/stone/id1438680035&#34;&gt;iOS&lt;/a&gt; e &lt;a href=&#34;https://play.google.com/store/apps/details?id=co.stone.banking.mobile.flagship&amp;amp;hl=pt_BR&amp;amp;gl=US&#34;&gt;Android&lt;/a&gt;). Esse processo também deve ser feito caso você seja uma plataforma e deseje oferecer abertura de conta Stone aos seus clientes, pois também precisaremos do seu perfil cadastrado aqui.&lt;/p&gt;
&lt;p&gt;O processo de abertura de conta pode ser resumido em duas etapas que serão detalhadas a seguir:&lt;br&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://stone-co.github.io/docs/guias/conta-de-pagamento/#envio-de-dados-cadastrais&#34;&gt;Envio de Dados Cadastrais&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stone-co.github.io/docs/guias/conta-de-pagamento/#kyc-know-your-customer&#34;&gt;Realização do processo de KYC (Know Your Customer)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;h2 id=&#34;abertura-de-conta&#34;&gt;Abertura de Conta&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;envio-de-dados-cadastrais&#34;&gt;&lt;strong&gt;Envio de Dados Cadastrais&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;O processo de abertura de conta será iniciado quando o usuário preencher os dados básicos de cadastro para criação de sua identidade na Stone. A identidade é o perfil do usuário na Stone e será gerida sempre por nós. Os dados solicitados nesta etapa serão Nome Completo, CPF, CNPJ, Razão Social e E-mail.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Atenção!&lt;/strong&gt;
&lt;br&gt;Para contas do tipo Pessoa Jurídica, a abertura deverá ser feita obrigatoriamente por um sócio ou responsável legal. Dependendo do tipo de cadastro, poderemos solicitar ainda alguns documentos como comprovante de MEI, Registro em Junta Comercial, entre outros.&lt;/p&gt;
&lt;p&gt;O recebimento dos dados iniciais pela Stone pode ser feito via aplicativo (&lt;a href=&#34;https://apps.apple.com/br/app/stone/id1438680035&#34;&gt;iOS&lt;/a&gt; e &lt;a href=&#34;https://play.google.com/store/apps/details?id=co.stone.banking.mobile.flagship&amp;amp;hl=pt_BR&amp;amp;gl=US&#34;&gt;Android&lt;/a&gt;) com o usuário dono da conta realizando o processo de preenchimento diretamente pelo app ou pode ser feito por API, caso você seja uma plataforma e queira oferecer o &lt;a href=&#34;https://stone-co.github.io/docs/referencia-da-api/dados-da-conta/criar-nova-conta-de-pagamento/&#34;&gt;processo de abertura de conta Stone&lt;/a&gt; em seu produto.
&lt;br&gt;Caso escolha realizar o processo por API, após o recebimento dos dados cadastrais, faremos uma primeira validação e, em seguida, iremos disparar um e-mail para criação de senha de acesso pelo usuário.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Credenciais&lt;/strong&gt;: A identidade é acessada através das credenciais do usuário, como, por exemplo, um e-mail e uma senha. Hoje essas credenciais dão acesso apenas ao perfil do usuário na Stone e não estão relacionadas às credenciais usadas por outros serviços que podem estar integrados à Conta Stone, como o Guiabolso, por exemplo. Entretanto, o objetivo é que no futuro a identidade na Stone funcione como uma conta de usuário no Google ou no Facebook, por exemplo. A partir de um único conjunto de credenciais, será possível se conectar a vários serviços.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pronto!&lt;/strong&gt; Com e-mail validado e senha criada, o usuário já pode realizar o processo de KYC (Know Your Customer).&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;kyc-know-your-customer&#34;&gt;&lt;strong&gt;KYC (Know Your Customer)&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Como somos regulados pelo Banco Central, temos a responsabilidade de realizar uma análise de documentos e procedimentos chamados KYC (Know Your Customer). Essa análise é realizada com cuidado internamente para evitar fraudes, principalmente falsidade ideológica.&lt;/p&gt;
&lt;p&gt;Nesse processo, solicitamos algumas informações além dos dados já enviados pelo cliente, como selfies e fotos de documentos. Todas as informações são analisadas para que o cadastro do usuário seja aprovado ou não.&lt;/p&gt;
&lt;p&gt;Com todas as validações feitas e aprovadas, o usuário terá sua conta aberta e pronta para uso.
Para plataformas que queiram oferecer o processo de abertura de conta Stone de maneira integrada, o envio das informações iniciais poderá ser feito usando nossa API. Já para recebimento dos dados de KYC, será necessário o uso da nossa SDK - detalhada na &lt;a href=&#34;https://stone-co.github.io/docs/guias/sdk/&#34;&gt;seção exclusiva&lt;/a&gt; sobre suas funcionalidades e usos.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;identificador&#34;&gt;&lt;strong&gt;Identificador&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Em nossa modelagem de conta de pagamento, utilizamos dois conceitos para refletir as etapas mencionadas acima:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;user_id&lt;/td&gt;
&lt;td&gt;Identificador que se refere à sua pessoa física (PF) na Stone contendo informações cadastrais como nome, sobrenome e CPF.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;organization_id&lt;/td&gt;
&lt;td&gt;Identificador que se refere à sua pessoa jurídica (PJ) na Stone contendo informações cadastrais como faturamento mensal e CNPJ.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;account_id&lt;/td&gt;
&lt;td&gt;Identificador que se refere a sua conta na Stone, contendo dados da sua conta de pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: CONSENTIMENTO</title>
      <link>https://stone-co.github.io/docs/guias/consentimento/</link>
      <pubDate>Mon, 28 Jun 2021 09:00:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/guias/consentimento/</guid>
      <description>
        
        
        &lt;br&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;O &lt;strong&gt;Consentimento&lt;/strong&gt; é um conceito fundamental no Open Banking, pois a partir da realização desse processo, um usuário poderá permitir o compartilhamento de suas informações entre diferentes instituições autorizadas pelo Banco Central e a movimentação de suas contas bancárias a partir de diferentes plataformas e não apenas pelo aplicativo ou site do banco, de forma segura, ágil e conveniente.&lt;/p&gt;
&lt;p&gt;Para instituições que desejem pedir consentimento a usuários da Conta Stone, basta gerar um link de consentimento em nossa API e enviá-lo para avaliação do usuário dono da conta.
&lt;br&gt;A partir da aprovação do usuário, a plataforma parceira terá acesso aos escopos solicitados.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;fluxo-de-consentimento&#34;&gt;Fluxo de Consentimento&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;A partir da abertura de conta realizada pelo usuário, uma plataforma poderá solicitar acesso ao compartilhamento de informações e iniciação de pagamentos na conta de um usuário. Para isso, deverá gerar um &lt;strong&gt;Link de Consentimento&lt;/strong&gt; dentro do padrão estabelecido.&lt;/p&gt;
&lt;p&gt;Após gerar e enviar o link ao usuário, poderão acontecer três situações, das quais o parceiro será notificado:&lt;/p&gt;
&lt;h6 id=&#34;usuário-acessa-o-link-e-dá-consentimento-ao-parceiro&#34;&gt;&lt;strong&gt;Usuário acessa o link e dá consentimento ao parceiro&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;Ao acessar o link, o usuário será direcionado para uma página da Stone em que irá escolher a quais contas de pagamento ele deseja conceder acesso ao parceiro. Ele também poderá verificar a quais escopos o parceiro passará a ter acesso após dar consentimento. Uma vez dado o consentimento, o usuário deverá ser direcionado de volta a uma página do parceiro.&lt;/p&gt;
&lt;p&gt;Veja abaixo um exemplo da tela de pedido de consentimento que será disponibilizada ao cliente:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;solicitacao-de-consentimento.png&#34; alt=&#34;solicitacao-consentimento&#34;&gt;&lt;/p&gt;
&lt;br&gt;
Veja abaixo um exemplo de permissão concedida:
&lt;p&gt;&lt;img src=&#34;consentimento-aprovado.png&#34; alt=&#34;consentimento-aprovado&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;Ao clicar no botão &amp;ldquo;Ok, entendi&amp;rdquo;, o usuário será redirecionado para uma página da aplicação parceira, cujo endereço foi definido no &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/#cadastro-da-aplicação&#34;&gt;Cadastro da Aplicação&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h6 id=&#34;usuário-acessa-o-link-e-não-dá-consentimento-ao-parceiro&#34;&gt;&lt;strong&gt;Usuário acessa o link e não dá consentimento ao parceiro&lt;/strong&gt;&lt;/h6&gt;
&lt;br&gt;
&lt;p&gt;Pode acontecer também o caso em que o usuário rejeita o consentimento solicitado. Nesse caso, ele será redirecionado a uma página do parceiro. Consequentemente, o parceiro não poderá acessar informações nem operar a conta do usuário.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Atenção!&lt;/strong&gt; &lt;br&gt;Em ambos os casos citados acima, faremos um redirecionamento para a URI cadastrada no token. Acrescentaremos na URI os seguintes campos:&lt;/p&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Chave&lt;/th&gt;
&lt;th&gt;Valor&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;session_metadata&lt;/td&gt;
&lt;td&gt;Com os mesmos os valores passados no token.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;consent_result&lt;/td&gt;
&lt;td&gt;Indica o resultado do pedido de consentimento e pode ter os seguintes valores:&lt;br&gt;- &lt;code&gt;ignored&lt;/code&gt;: caso o usuário não dê consentimento;&lt;br&gt;- &lt;code&gt;approved&lt;/code&gt;: caso ele dê o consentimento e&lt;br&gt;- &lt;code&gt;already_granted&lt;/code&gt;: caso o consentimento desse recurso para essa aplicação já tenha sido dado anteriormente.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resource_id&lt;/td&gt;
&lt;td&gt;Identificador do resource ao qual o consentimento foi dado. Só é retornado quando o resultado do consent é &lt;code&gt;approved&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;p&gt;Quando o consent_result for &lt;code&gt;approved&lt;/code&gt;, será enviado também o webhook consent_requested com os dados do consentimento dado. Dessa forma, você poderá prover uma experiência fluida para ambos os casos, basta validar esses campos!&lt;/p&gt;
&lt;br&gt;
&lt;h6 id=&#34;usuário-ignora-o-link&#34;&gt;&lt;strong&gt;Usuário ignora o link&lt;/strong&gt;&lt;/h6&gt;
&lt;br&gt;
&lt;p&gt;O link de consentimento tem validade de 2 horas após a sua geração. Caso o usuário não acesse o link dentro desse período, será necessário gerar um novo link e fazer um novo envio.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;gerando-link-de-consentimento&#34;&gt;Gerando Link de Consentimento&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;Após cadastrar e autenticar a sua aplicação, você estará apto a pedir consentimento aos seus clientes que tenham realizado a abertura de uma conta Stone. Ressaltamos que toda interação com o usuário nesse processo será gerida por nossa plataforma.&lt;/p&gt;
&lt;p&gt;Seguindo os parâmetros descritos abaixo, você deverá enviar o link ao usuário por meio da sua aplicação.
&lt;br&gt;O link de consentimento deve ser enviado dentro da própria aplicação. Você pode, por exemplo, disponibilizar um botão em sua plataforma para que o usuário acesse o link. Esse link não deve ser enviado ao usuário por e-mail sob hipótese alguma.&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;parâmetros-do-link-de-consentimento&#34;&gt;&lt;strong&gt;Parâmetros do link de consentimento&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;O link de consentimento deverá conter três parâmetros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;client_id: o ClientID recebido pelo desenvolvedor após o cadastro;&lt;/li&gt;
&lt;li&gt;type: no caso, será sempre o valor “consent”;&lt;/li&gt;
&lt;li&gt;jwt: será um token gerado localmente pelo desenvolvedor com a mesma chave privada e algoritmo que ele usa para se autenticar. Mais detalhes abaixo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Com esses parâmetros, basta gerar um link no seguinte formato (por ambiente), substituindo CLIENT_ID e JWT por seus respectivos valores:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Sandbox&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://sandbox.conta.stone.com.br/consentimento?client_id=CLIENT_ID&amp;amp;jwt=JWT&#34;&gt;https://sandbox.conta.stone.com.br/consentimento?client_id=CLIENT_ID&amp;amp;jwt=JWT&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Produção&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://conta.stone.com.br/consentimento?client_id=CLIENT_ID&amp;amp;jwt=JWT&#34;&gt;https://conta.stone.com.br/consentimento?client_id=CLIENT_ID&amp;amp;jwt=JWT&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;p&gt;Assim como fizemos o processo de gerar um Token de Acesso autenticado, também será gerado um JWT para pedido do Consentimento.&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;especificações-do-jwt-para-pedir-consentimento&#34;&gt;&lt;strong&gt;Especificações do JWT para pedir consentimento&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Header&lt;/strong&gt;
&lt;br&gt;Observe que é preciso assinar o token JWT com a chave privada da aplicação e o algoritmo RS256, assim como é feito para o token de autenticação. Dessa forma, nesse token também é preciso incluir um header com as informações sobre o algoritmo de criptografia utilizado, entre outros metadados, como um ID da chave utilizada. Por exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;alg&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;RS256&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;typ&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;JWT&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Payload&lt;/strong&gt;
&lt;br&gt;O token deve conter as claims abaixo:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Campos  &lt;strong&gt;Obrigatórios&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;th&gt;Tipo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;Será sempre &amp;ldquo;consent&amp;rdquo; neste caso.&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;client_id&lt;/td&gt;
&lt;td&gt;Será o ClientID da Aplicação Parceira.&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;redirect_uri&lt;/td&gt;
&lt;td&gt;A URI para redirecionamento após a ação do usuário. Essa URI foi informada previamente no cadastro da Aplicação Parceira. Caso seja enviada uma URI diferente, retornará erro.&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;session_metadata&lt;/td&gt;
&lt;td&gt;Um objeto que contenha qualquer chave relevante para o parceiro identificar a sessão do usuário. Esse valor estará presente na URI de redirecionamento e não pode ser nulo ou um mapa vazio.&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Objeto&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iss&lt;/td&gt;
&lt;td&gt;Usar o client_id da Aplicação.&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iat&lt;/td&gt;
&lt;td&gt;Momento em que o token foi gerado. É um timestamp UTC. Exemplo: &amp;ldquo;iat&amp;rdquo;: 1542235633.&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Int&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;aud&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:accounts-hubid@openbank.stone.com.br&#34;&gt;accounts-hubid@openbank.stone.com.br&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jti&lt;/td&gt;
&lt;td&gt;Identificador único do token gerado. Normalmente se utiliza um UUID.&lt;/td&gt;
&lt;td&gt;&lt;em&gt;String&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nbf&lt;/td&gt;
&lt;td&gt;É o momento em que o token passa a ser válido. Na maioria dos casos terá o mesmo valor que iat (issued at), pois queremos que ele esteja válido logo a partir do momento de geração.&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Int&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;exp&lt;/td&gt;
&lt;td&gt;Momento de expiração do token em segundos desde o início da era UNIX (1970). É um timestamp UTC e não pode ser maior que 2 horas. Exemplo: &amp;ldquo;exp&amp;rdquo;: 1542235633&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Int&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;p&gt;Segue um exemplo de como ficariam as claims preenchidas:&lt;/p&gt;
&lt;br&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;consent&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;client_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;MY CLIENT ID&amp;#34;&lt;/span&gt;, 
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;iss&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;MY CLIENT ID&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;redirect_uri&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;https://mypreviouslyregistereduri.com&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;session_metadata&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;user_session&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;xxxxxxxxxxxxxxxxxxxxx&amp;#34;&lt;/span&gt;,
  },
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;iat&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#bd93f9&#34;&gt;1542235633&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;nbf&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#bd93f9&#34;&gt;1542235633&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;exp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#bd93f9&#34;&gt;1549069563&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;jti&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;41e8aa9f-bb9c-4fd2-9953-2595dbbd5a83&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;aud&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;accounts-hubid@openbank.stone.com.br&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: APROVAÇÃO</title>
      <link>https://stone-co.github.io/docs/guias/aprovacao/</link>
      <pubDate>Mon, 28 Jun 2021 09:00:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/guias/aprovacao/</guid>
      <description>
        
        
        &lt;br&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;No Open Banking, uma plataforma poderá criar uma transação na conta do usuário, mas esta só será efetuada se houver a aprovação do usuário dono da conta. Esse procedimento assegura ao dono da conta que não haverá movimentação de seu dinheiro sem sua permissão, além de proteger a aplicação de eventuais erros, ataques ou bugs que iniciem transações não desejadas pelo usuário.&lt;/p&gt;
&lt;p&gt;A aprovação de uma transação tem como objetivo garantir que toda movimentação financeira de saída de uma conta seja feita somente por um usuário devidamente autorizado. É um procedimento em que o usuário que já concedeu o consentimento é notificado da criação de uma transação e direcionado para uma página onde é possível visualizar todas as transações criadas pelo parceiro. Nessa página é possível aprovar ou rejeitar uma transação, possibilitando ou impedindo sua realização. É importante lembrar que apenas aplicativos que tenham obtido &lt;a href=&#34;https://stone-co.github.io/docs/guias/consentimento/&#34;&gt;consentimento&lt;/a&gt; podem criar transações.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;aprovando-uma-transação&#34;&gt;Aprovando uma transação&lt;/h2&gt;
&lt;br&gt;
&lt;p&gt;Caso uma transação tenha sido iniciada por uma plataforma terceira em uma conta Stone, oferecemos algumas formas para o usuário avaliar e realizar a aprovação ou reprovação das transações. Verifique o melhor formato para seu negócio abaixo:&lt;/p&gt;
&lt;h5 id=&#34;aplicativo-aprovador&#34;&gt;&lt;strong&gt;Aplicativo Aprovador&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;O Aprovador é um aplicativo utilizado pelo usuário para realizar a autorização de transações criadas pelo parceiro. Além disso, através do aplicativo é possível manter um histórico de movimentação de saída de uma conta. Nesse histórico é possível visualizar os valores movimentados, o destino das movimentações e o usuário que autorizou as transações. É possível também utilizá-lo para realizar aprovações em lote, ou seja, aprovar um grande número de transações pendentes ao mesmo tempo.
Baixe agora o aplicativo na plataforma &lt;a href=&#34;https://apps.apple.com/br/app/aprovador-stone/id1440677386&#34;&gt;iOS&lt;/a&gt; ou &lt;a href=&#34;https://play.google.com/store/apps/details?id=br.com.stone.approver&amp;amp;hl=pt_BR&amp;amp;gl=US&#34;&gt;Android&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;aplicativo-stone&#34;&gt;&lt;strong&gt;Aplicativo Stone&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;Além de aprovar transações pelo aplicativo Aprovador Stone, também é possível aprovar pelo aplicativo Stone, no menu “Aprovar transações”. Para baixar o aplicativo na plataforma iOS, &lt;a href=&#34;https://apps.apple.com/br/app/stone/id1438680035&#34;&gt;clique aqui&lt;/a&gt;. Tem um Android? Também temos um aplicativo para você &lt;a href=&#34;https://play.google.com/store/apps/details?id=co.stone.banking.mobile.flagship&amp;amp;hl=pt_BR&amp;amp;gl=US&#34;&gt;clicando aqui&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: WEBHOOKS</title>
      <link>https://stone-co.github.io/docs/guias/webhooks/</link>
      <pubDate>Mon, 28 Jun 2021 09:00:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/guias/webhooks/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;br&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;A ocorrência de certos eventos pode ser importante em diversos fluxos na integração de uma aplicação com a API Stone Open Banking. Por isso, utilizamos webhooks para notificar as aplicações integradas da ocorrência desses eventos.&lt;/p&gt;
&lt;p&gt;Para sua utilização, é preciso que a aplicação tenha cadastrado no &lt;a href=&#34;https://stone-co.github.io/docs/guias/stone-open-banking/#testes-em-sandbox&#34;&gt;formulário&lt;/a&gt; a URI para a qual enviaremos um POST com os dados do evento. A aplicação deverá estar preparada para lidar com cada evento de forma adequada.&lt;/p&gt;
&lt;p&gt;Ao enviar um webhook, esperamos receber uma resposta do range 200 que indica o sucesso no recebimento dessa notificação por parte da sua aplicação. Caso a resposta seja um código diferente do range 200, encaramos como falha no recebimento do webhook e repetimos o envio até receber um sucesso ou batermos o número máximo de 50 tentativas no envio de um evento.
Essas tentativas são realizadas ao longo do dia, de forma assíncrona, sem um padrão de horários de tentativas.&lt;/p&gt;
&lt;p&gt;A aplicação irá receber webhooks dos eventos que acontecerem na(s) conta(s) sobre as quais ela opera dado o escopo de funcionalidades disponíveis na sua aplicação e também recebem os eventos relacionados às contas sobre as quais foi dado consentimento.
&lt;br&gt;Vale lembrar que os webhooks serão enviados independente se o evento for via API ou via app.&lt;/p&gt;
&lt;br&gt;


&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Virada em Produção&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;É imprescindível que a aplicação esteja recebendo e tratando de forma adequada todos os tipos de webhook referentes às funcionalidades que implementou.&lt;/p&gt;

&lt;/div&gt;

&lt;br&gt;
&lt;h3 id=&#34;eventos-que-geram-notificações&#34;&gt;Eventos que geram notificações&lt;/h3&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h5 id=&#34;emissão-de-boleto&#34;&gt;&lt;strong&gt;Emissão de Boleto:&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Tipo de Evento&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;barcode_payment_invoice_created.json&#34;&gt;barcode_payment_invoice_created&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Representa a criação/emissão de um boleto.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;barcode_payment_invoice_registered.json&#34;&gt;barcode_payment_invoice_registered&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Representa o registro de um boleto.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;barcode_payment_invoice_payment_promissed.json&#34;&gt;barcode_payment_invoice_payment_promissed&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Representa que o pagamento do boleto foi acolhido em alguma instituição.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;barcode_payment_invoice_settled.json&#34;&gt;barcode_payment_invoice_settled&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Representa que o pagamento do boleto foi confirmado.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;barcode_payment_invoice_expired.json&#34;&gt;barcode_payment_invoice_expired&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Representa que o boleto está expirado.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;cash_in_barcode_payment.json&#34;&gt;cash_in_barcode_payment&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Representa a entrada do valor do boleto na conta do beneficiário.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;inbound_barcode_payment_refunded.json&#34;&gt;inbound_barcode_payment_refunded&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Representa que o pagamento do boleto foi devolvido.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h5 id=&#34;pagamento-de-boletos-contas-e-tributos&#34;&gt;&lt;strong&gt;Pagamento de Boletos, Contas e Tributos:&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de Evento&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cash_in_payment_refund&lt;/td&gt;
&lt;td&gt;Representa o reembolso de um pagamento malsucedido.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;cash_out_payment.json&#34;&gt;cash_out_payment&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a criação de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_payment_failed&lt;/td&gt;
&lt;td&gt;Representa a falha na criação de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_payment_scheduled&lt;/td&gt;
&lt;td&gt;Representa o agendamento de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_payment_scheduled_failed&lt;/td&gt;
&lt;td&gt;Representa a falha no agendamento de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;cash_out_payment_approved.json&#34;&gt;cash_out_payment_approved&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a aprovação de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;cash_out_payment_execution_started.json&#34;&gt;cash_out_payment_execution_started&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa o início da execução de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_payment_cancelled&lt;/td&gt;
&lt;td&gt;Representa o cancelamento de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_payment_rejected&lt;/td&gt;
&lt;td&gt;Representa a rejeição de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;cash_out_payment_finished.json&#34;&gt;cash_out_payment_finished&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a finalização de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_payment_expired&lt;/td&gt;
&lt;td&gt;Representa a expiração de um pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h5 id=&#34;transferência-interna&#34;&gt;&lt;strong&gt;Transferência interna:&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de Evento&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cash_in_internal_transfer&lt;/td&gt;
&lt;td&gt;Representa o recebimento de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer&lt;/td&gt;
&lt;td&gt;Representa a criação de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer_failed&lt;/td&gt;
&lt;td&gt;Representa a falha na criação de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer_scheduled&lt;/td&gt;
&lt;td&gt;Representa o agendamento de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer_scheduled_failed&lt;/td&gt;
&lt;td&gt;Representa a falha no agendamento de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer_approved&lt;/td&gt;
&lt;td&gt;Representa a aprovação de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer_cancelled&lt;/td&gt;
&lt;td&gt;Representa o cancelamento de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer_rejected&lt;/td&gt;
&lt;td&gt;Representa a rejeição de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer_finished&lt;/td&gt;
&lt;td&gt;Representa a finalização de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_internal_transfer_expired&lt;/td&gt;
&lt;td&gt;Representa a expiração de uma transferência interna.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h5 id=&#34;transferência-externa&#34;&gt;&lt;strong&gt;Transferência externa:&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de Evento&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cash_in_external_transfer&lt;/td&gt;
&lt;td&gt;Representa o recebimento de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_in_external_transfer_refund&lt;/td&gt;
&lt;td&gt;Representa o reembolso de uma transferência externa malsucedida.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer&lt;/td&gt;
&lt;td&gt;Representa a criação de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_failed&lt;/td&gt;
&lt;td&gt;Representa a falha na criação de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_scheduled&lt;/td&gt;
&lt;td&gt;Representa o agendamento de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_scheduled_failed&lt;/td&gt;
&lt;td&gt;Representa a falha no agendamento de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_approved&lt;/td&gt;
&lt;td&gt;Representa a aprovação de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_execution_started&lt;/td&gt;
&lt;td&gt;Representa o início da execução de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_cancelled&lt;/td&gt;
&lt;td&gt;Representa o cancelamento de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_rejected&lt;/td&gt;
&lt;td&gt;Representa a rejeição de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_finished&lt;/td&gt;
&lt;td&gt;Representa a finalização de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cash_out_external_transfer_expired&lt;/td&gt;
&lt;td&gt;Representa a expiração de uma transferência externa.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h5 id=&#34;pix&#34;&gt;&lt;strong&gt;Pix:&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de Evento&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_entries_key_created.json&#34;&gt;pix_entries_key_created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a criação de uma chave Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.entries.deleted.json&#34;&gt;pix_entries_deleted&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a deleção de uma chave Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.entries.failed.json&#34;&gt;pix_entries_failed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a falha na criação de uma chave Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.entries.claims.waiting_resolution.json&#34;&gt;pix_entries_claims_waiting_resolution&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa que estamos aguardando a resposta da cliente sobre a claim (confirmação ou cancelamento).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.entries.claims.confirmed.json&#34;&gt;pix_entries_claims_confirmed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa que a cliente confirmou a claim, passando a chave para outra instituição.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.entries.claims.automatically_confirmed_waiting_resolution.json&#34;&gt;pix_entries_claims_automatically_confirmed_waiting_resolution&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa que a reivindicação de posse foi automaticamente confirmada porque a cliente não respondeu no prazo de 7 dias corridos.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.entries.claims.automatically_confirmed.json&#34;&gt;pix_entries_claims_automatically_confirmed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa que foi realizada a confirmação da reivindicação de posse automaticamente, porque a cliente não respondeu dentro dos 14 dias de prazo. Aqui a reivindicação não pode ser mais cancelada.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.entries.claims.cancelled.json&#34;&gt;pix_entries_claims_cancelled&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa cancelamento da solicitação da claim por parte da cliente, mantendo a chave cadastrada na conta original.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.entries.claims.automatically_cancelled.json&#34;&gt;pix_entries_claims_automatically_cancelled&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa cancelamento automático da solicitação de portabilidade, por falta de resposta da cliente nos 7 dias de prazo.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_payment_invoice.json&#34;&gt;pix_payment_invoice&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa um QR Code dinâmico imediato.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_payment_invoice_with_due_date.json&#34;&gt;pix_payment_invoice_with_due_date&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa um QR Code dinâmico com vencimento, multa, juros, desconto e abatimento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_invoice_payment_created.json&#34;&gt;pix_invoice_payment_created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a criação de um QR Code dinâmico.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_invoice_payment_cancelled.json&#34;&gt;pix_invoice_payment_cancelled&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa o cancelamento de um QR Code dinâmico.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_invoice_payment_paid.json&#34;&gt;pix_invoice_payment_paid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa o pagamento com sucesso de um QR Code dinâmico.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;inbound_pix_payment.json&#34;&gt;inbound_pix_payment&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa um cash-in de Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_inbound_payment_received.json&#34;&gt;pix_inbound_payment_received&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa o recebimento de um cash-in de Pix, podendo estar associado a um QR Code estatático, dinâmico imediato ou dinâmico com vencimento. Essa associação será representada pela presença de um dos seguintes atributos dentro do target_data: &lt;br&gt;- &lt;code&gt;pix_payment_invoice&lt;/code&gt;: Invoice dinâmica imediata; &lt;br&gt;- &lt;code&gt;pix_payment_static_invoice&lt;/code&gt;: Invoice estática; &lt;br&gt;- &lt;code&gt;pix_payment_invoice_with_due_date&lt;/code&gt;: Invoice dinâmica com vencimento, multa, juros, desconto e abatimento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_refund_payment.json&#34;&gt;pix_refund_payment&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa uma devolução (cash-out) associada a um inbound payment (cash-in).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.inbound_payment.refund.created.json&#34;&gt;pix_inbound_payment_refund_created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a criação de uma devolução associada a uma transação Pix. Lembrando que estamos falando da devolução (cash-out) de um cash-in.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.inbound_payment.refund.failed.json&#34;&gt;pix_inbound_payment_refund_failed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa que houve falha na criação da devolução (cash-out) de um cash-in de Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.inbound_payment.refund.money_reserved.json&#34;&gt;pix_inbound_payment_refund_money_reserved&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a reserva de dinheiro (impacto no saldo da cliente) após a criação com sucesso de uma devolução (cash-out) de um cash-in de Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.inbound_payment.refund.settled.json&#34;&gt;pix_inbound_payment_refund_settled&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa que a devolução (cash-out) de um cash-in de Pix foi realizada com sucesso.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix.inbound_payment.refund.reversed.json&#34;&gt;pix_inbound_payment_refund_reversed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa que a devolução (cash-out) de um cash-in de Pix foi rejeitada.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_outbound_payment_created.json&#34;&gt;pix_outbound_payment_created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a criação de um cash-out de Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;pix_outbound_payment_money_reserved.json&#34;&gt;pix_outbound_payment_money_reserved&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a reserva de dinheiro (impacto no saldo da cliente) após a criação com sucesso de um cash-out de Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pix_outbound_payment_failed&lt;/td&gt;
&lt;td&gt;Representa a falha na criação de um cash-out de Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pix_outbound_payment_settled&lt;/td&gt;
&lt;td&gt;Representa a liquidação com sucesso de um cash-out de Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pix_outbound_payment_refunded&lt;/td&gt;
&lt;td&gt;Representa a devolução de um cash-out de Pix.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h5 id=&#34;consentimento&#34;&gt;&lt;strong&gt;Consentimento:&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de Evento&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;exemplo_consent_request.json&#34;&gt;consent_request&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a confirmação do pedido de consentimento por parte do user.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h5 id=&#34;abertura-de-conta&#34;&gt;&lt;strong&gt;Abertura de conta:&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de Evento&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;A1.json&#34;&gt;sign_up_created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa o pedido de abertura de conta.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;A2.json&#34;&gt;sign_up_status_updated&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa quando há uma atualização dos dados na abertura da conta.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;A3.json&#34;&gt;sign_up_resource_details_updated&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa o envio de diversos webhooks de acordo com a evolução da abertura de conta. Exemplo: &lt;code&gt;account_created&lt;/code&gt;, &lt;code&gt;user_email_verified&lt;/code&gt;, &amp;hellip;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h5 id=&#34;link-de-pagamento&#34;&gt;&lt;strong&gt;Link de Pagamento:&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo de Evento&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;lp_order_created.json&#34;&gt;order_created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a criação do link de pagamento. &lt;br&gt;Também é enviado um &lt;a href=&#34;lp_order_created_status_pending.json&#34;&gt;segundo webhook&lt;/a&gt; desse tipo que representa que o pagador executou o pagamento. &lt;br&gt;Nesse caso, o campo &lt;code&gt;status&lt;/code&gt; do webhook terá seu valor alterado para &lt;code&gt;pending&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;lp_order_paid.json&#34;&gt;order_paid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa o pagamento em si do link de pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;lp_order_closed.json&#34;&gt;order_closed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Representa a finalização do link de pagamento.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h2 id=&#34;estrutura-do-header-das-notificações&#34;&gt;Estrutura do header das notificações&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;x-stone-webhook-event-id: &amp;quot;930bbd6d-0c7a-4fe4-8b50-4b82a20cb847&amp;quot;
x-stone-webhook-event-type: &amp;quot;cash_out_internal_transfer&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A idempotência de webhooks deverá ser validada no campo &amp;lsquo;x-stone-webhook-event-id&amp;rsquo; disponível no header.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;estrutura-do-payload-das-notificações&#34;&gt;Estrutura do payload das notificações&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Campo&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;env&lt;/td&gt;
&lt;td&gt;Especifica de qual ambiente partiu o evento. Valores possíveis: sandbox ou production.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;event_type&lt;/td&gt;
&lt;td&gt;Especifica qual tipo de evento disparou a notificação. Veja os valores possíveis &lt;a href=&#34;#os-eventos-que-geram-notifica%C3%A7%C3%B5es-s%C3%A3o&#34;&gt;aqui&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;É o identificador da notificação.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;event_notified_at&lt;/td&gt;
&lt;td&gt;É a hora em que a notificação está sendo enviada.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;event_happened_at&lt;/td&gt;
&lt;td&gt;É a hora em que o evento ocorreu.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;target_data&lt;/td&gt;
&lt;td&gt;Objeto com as informações detalhadas do recurso que gerou o evento. Apesar de ter campos variáveis, sempre conterá o campo account_id.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;target_detail_uri&lt;/td&gt;
&lt;td&gt;É o endereço onde se pode consultar os detalhes do recurso.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;target_id&lt;/td&gt;
&lt;td&gt;É o identificador do recurso que gerou o evento.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;target_statement_uri&lt;/td&gt;
&lt;td&gt;É o endereço da entrada no extrato referente ao recurso.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;target_type&lt;/td&gt;
&lt;td&gt;É o tipo do recurso.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;


&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;strong&gt;Inclusão de campos&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A implementação não deve ser strict no parser do payload. Ao longo do tempo, os payloads podem sofrer a inclusão de campos.&lt;/p&gt;

&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Exemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sandbox&amp;#34;&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;cash_in_internal_transfer&amp;#34;&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;event_happened_at&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2020-05-13T14:58:15Z&amp;#34;&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;event_notified_at&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2020-05-13T14:58:15Z&amp;#34;&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;iat&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#bd93f9&#34;&gt;1589381895&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;jti&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2o79sqemde14mv76eo00jsc3&amp;#34;&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;nbf&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#bd93f9&#34;&gt;1589381895&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_data&amp;#34;&lt;/span&gt;:{
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;account_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;09c016b2-876a-450a-9f40-316f8e2f8778&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;balance_after&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;balance_before&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;counter_party&amp;#34;&lt;/span&gt;:{
         &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;account&amp;#34;&lt;/span&gt;:{
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;account_code&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;841412&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;branch_code&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;institution&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;16501555&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;institution_name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Stone Pagamentos S.A.&amp;#34;&lt;/span&gt;
         },
         &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;entity&amp;#34;&lt;/span&gt;:{
            &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Loja Da Maria&amp;#34;&lt;/span&gt;
         }
      },
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;created_at&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2020-05-13T14:58:15Z&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;54abd61c-3b18-401c-9816-951cbe135149&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;operation&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;credit&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FINISHED&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;internal&amp;#34;&lt;/span&gt;
   },
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_detail_uri&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_id&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_statement_uri&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;https://sandbox-api.openbank.stone.com.br/api/v1/statement/entries/54abd61c-3b18-401c-9816-951cbe135149&amp;#34;&lt;/span&gt;,
   &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_type&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;internal_transfer&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h2 id=&#34;trabalhando-com-webhooks&#34;&gt;Trabalhando com Webhooks&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h3 id=&#34;webhooks-seguros&#34;&gt;&lt;strong&gt;Webhooks Seguros&lt;/strong&gt;&lt;/h3&gt;
&lt;br&gt;
&lt;p&gt;Nossa API envia webhooks de forma segura para evitar que eles sejam abertos e/ou alterados. Isso é feito em duas etapas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assinatura do conteúdo usando uma das nossas &lt;a href=&#34;https://api.openbank.stone.com.br/api/v1/discovery/keys&#34;&gt;chaves públicas&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Ciframento do resultado usando a chave pública do destinatário.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h5 id=&#34;como-eu-posso-abrir-de-forma-segura-o-conteúdo-de-um-webhook&#34;&gt;&lt;strong&gt;Como eu posso abrir de forma segura o conteúdo de um webhook?&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;p&gt;Para poder visualizar o conteúdo de um webhook, é necessário fazer o caminho inverso:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Decifrar o conteúdo do webhook&lt;/strong&gt; usando sua chave privada. O resultado é um token JWT assinado com a nossa chave;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Verificar a assinatura do token&lt;/strong&gt; com a nossa chave pública.&lt;/li&gt;
&lt;/ol&gt;
&lt;br&gt;
&lt;h5 id=&#34;1---decifrar-o-conteúdo-do-webhook&#34;&gt;&lt;strong&gt;1 - Decifrar o conteúdo do webhook&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;O webhook irá chegar com um payload parecido com este:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;encrypted_body&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;xxxxxxxxxxxxxx conteúdo cifrado&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O valor do campo &amp;ldquo;encrypted_body&amp;rdquo; é um token no formato JWE (JSON Web Encryption) compacto. Esse formato é um padrão e várias linguagens possuem bibliotecas prontas para ele.&lt;/p&gt;
&lt;p&gt;O algoritmo utilizado é: &lt;strong&gt;RSA-OAEP-256&lt;/strong&gt; com &lt;strong&gt;A256GCM&lt;/strong&gt;. Para decifrar o conteúdo, é necessária uma biblioteca que suporte esses algoritmos como:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/js-jose&#34;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/b_c/jose4j/wiki/Home&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hexdocs.pm/jose/JOSE.html&#34;&gt;Erlang/Elixir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/go-jose&#34;&gt;Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A chave a ser utilizada tem que ser a &lt;strong&gt;chave privada&lt;/strong&gt; par da &lt;strong&gt;chave pública&lt;/strong&gt; usada na autenticação da aplicação.&lt;/p&gt;
&lt;p&gt;Um exemplo para decodificar o webhook pode ser verificado no código em Python abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; jwcrypto &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; jwk, jwe
&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; jwcrypto.common &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; json_encode
&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; jwt
&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; time
&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; subprocess
&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; simplejson &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; json

webhook_response &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;encrypted_body&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;eyJhbGciOiJSU0EtT0FFz2C15nwK...kadnFeyS100SDgTPA9pO5GS4_jZw.SwKpGLZ_f2-q-Gw&amp;#34;&lt;/span&gt;}

token &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; webhook_response[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;encrypted_body&amp;#39;&lt;/span&gt;]

&lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;private-key.pem&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;rb&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pemfile:
    jwk_private_key &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; jwk&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;JWK&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;from_pem(pemfile&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read())

jwetoken &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; jwe&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;JWE()
jwetoken&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;deserialize(token)
jwetoken&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;decrypt(jwk_private_key)
payload &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; jwetoken&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;payload&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;decode(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)

jwt_decoded &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; jwt&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;decode(payload, options&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;verify_signature&amp;#34;&lt;/span&gt;: False})
jwt_parsed &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; json_encode(jwt_decoded)

subprocess&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;pbcopy&amp;#39;&lt;/span&gt;, universal_newlines&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;True, &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;input&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;jwt_parsed)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h5 id=&#34;2---verificar-a-assinatura-do-token&#34;&gt;&lt;strong&gt;2 - Verificar a assinatura do token&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;Até este momento, deciframos apenas um conteúdo que pode ser gerado por qualquer um que tenha acesso à chave pública da aplicação.&lt;/p&gt;
&lt;p&gt;Nós utilizamos a assinatura do conteúdo em token JWS (JSON Web Signing) compacto como uma outra camada de verificação de segurança no conteúdo do webhook.&lt;/p&gt;
&lt;p&gt;Esse token possui em seus &amp;ldquo;claims&amp;rdquo; (alegações) o conteúdo do webhook. Para garantir que ele foi gerado pela Stone, você deve validar a assinatura dele consultando nossas chaves públicas de assinatura.&lt;/p&gt;
&lt;p&gt;As chaves públicas da Stone estão publicadas &lt;a href=&#34;https://sandbox-api.openbank.stone.com.br/api/v1/discovery/keys&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Repare que cada chave possui um &lt;em&gt;kid&lt;/em&gt; (key ID) e um &lt;em&gt;use&lt;/em&gt; (sig ou enc). O token JWS possui um header que diz qual é o ID da chave usada para assiná-lo. Assim, é necessário, em primeiro lugar, garantir que o token foi assinado com uma chave que está publicada pela Stone.&lt;/p&gt;
&lt;p&gt;Para não ter que buscar a nossa chave pública a cada validação de assinatura, você pode salvar nossa chave do seu lado (por exemplo, através de um cache), de forma que, caso aconteça algum erro na validação, você volte a consultar o nosso serviço para buscar a chave pública mais atual. Assim você desonera  sua aplicação sem perder a resiliência a mudanças de chave do nosso lado.&lt;/p&gt;
&lt;p&gt;Veja &lt;a href=&#34;https://hexdocs.pm/joken_jwks/JokenJwks.DefaultStrategyTemplate.html#content&#34;&gt;aqui&lt;/a&gt; as melhores práticas para fazer essa implementação.&lt;/p&gt;
&lt;p&gt;O algoritmo que usamos será &lt;em&gt;sempre RS256&lt;/em&gt;. Há uma lista de bibliotecas que tratam de assinatura de token em &lt;a href=&#34;https://jwt.io/&#34;&gt;jwt.io&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;segurança&#34;&gt;&lt;strong&gt;Segurança&lt;/strong&gt;&lt;/h5&gt;
&lt;br&gt;
&lt;p&gt;É importante seguir os dois passos aqui: tanto decifrar quanto verificar a assinatura. Isso irá garantir que não apenas geramos algo que não pode ser lido por alguém que &lt;em&gt;não possui&lt;/em&gt; a chave pública quanto que nosso conteúdo foi assinado pela Stone.&lt;/p&gt;
&lt;p&gt;Também aconselhamos cuidado na configuração do cliente que irá consultar as nossas chaves. Certifique-se de que ele não está vulnerável a servidores intermediários propositalmente mal configurados. Um exemplo comum é um servidor configurado para protocolos conhecidamente falhos.&lt;/p&gt;
&lt;p&gt;Sempre que estiver em dúvida, consulte nossa API com os IDs dos dados no conteúdo do webhook.&lt;/p&gt;
&lt;p&gt;Mais informações sobre JavaScript Object Signing and Encryption, como JWTs, JWEs, JWSs, &lt;a href=&#34;https://www.ca.com/pt/blog-latam/os-beneficios-de-jwtjwsjwe-no-designs-de-apis.html&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;webhooks-idempotentes&#34;&gt;&lt;strong&gt;Webhooks idempotentes&lt;/strong&gt;&lt;/h3&gt;
&lt;br&gt;
&lt;p&gt;No geral um evento, quando recepcionado com sucesso, é enviado apenas uma vez pela Stone, mas é possível que em algum cenário extraordinário um webhook acabe sendo enviado mais de uma vez e por isso desenvolvemos uma lógica de idempotência de eventos.&lt;/p&gt;
&lt;p&gt;Todo webhook gerado pela Stone leva consigo uma chave de idempotência enviada no campo &lt;code&gt;x-stone-webhook-event-id&lt;/code&gt; do header.&lt;/p&gt;
&lt;p&gt;É importante que essa chave seja sempre salva pela sua aplicação e que a cada novo evento você verifique a idempotência desse evento, evitando processar duas vezes um mesmo evento.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;endpoint-para-verificar-webhooks-enviados&#34;&gt;Endpoint para verificar webhooks enviados&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;Caso tenha dificuldade para identificar algum webhook enviado pela Stone na URI indicada para receber webhooks, disponibilizamos um endpoint que traz todos os webhooks já enviados para a sua aplicação.&lt;/p&gt;
&lt;p&gt;Para acessar, basta fazer o comando abaixo, lembrando que no &lt;em&gt;header&lt;/em&gt; deve ser enviado o Bearer token no campo &lt;code&gt;authorization&lt;/code&gt; e que o client_id é o id da sua aplicação, passado pelo time de integração.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET https://sandbox-api.openbank.stone.com.br/api/v1/applications/application:{{client_id}}/webhooks
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Exemplo de Response&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;client_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;application:de4d224b-3f79-4b4d-8ff5-c1bc475830e5&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;created_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2021-06-02T19:40:24Z&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;: {
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sandbox&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;event_happened_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2021-06-02T19:40:23Z&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;event_notified_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2021-06-02T19:40:24Z&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;event_type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;cash_out_internal_transfer_finished&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;7919b78a-630e-4ad4-bb12-91eec729175d&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_data&amp;#34;&lt;/span&gt;: {
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;account_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;6745bdf0-7647-40cd-8666-d78bb15fbd38&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#bd93f9&#34;&gt;4000&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;approval_expired_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;approved_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2021-06-02T19:40:23Z&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;approved_by&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;user:24017c13-1f9d-44e4-b4af-007f695cece3&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;batch_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;cancelled_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;cancelled_by&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;created_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2021-06-02T19:40:23Z&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;created_by&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;user:24017c13-1f9d-44e4-b4af-007f695cece3&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;failed_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;failure_reason_code&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;failure_reason_description&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;fee&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;finished_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2021-06-02T19:40:23Z&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;7919b78a-630e-4ad4-bb12-91eec729175d&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;rejected_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;rejected_by&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;scheduled_to&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;settled_at&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;2021-06-02T19:40:23Z&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;FINISHED&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;account&amp;#34;&lt;/span&gt;: {
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;account_code&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;55382931&amp;#34;&lt;/span&gt;
        },
        &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;entity&amp;#34;&lt;/span&gt;: {
          &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
        }
      },
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_account_code&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;55382931&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_account_owner_name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    },
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_detail_uri&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;https://sandbox-api.openbank.stone.com.br/api/v1/internal_transfers/7919b78a-630e-4ad4-bb12-91eec729175d&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;7919b78a-630e-4ad4-bb12-91eec729175d&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_statement_uri&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,
    &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;#34;target_type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;internal_transfer_finished&amp;#34;&lt;/span&gt;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: SDK</title>
      <link>https://stone-co.github.io/docs/guias/sdk/</link>
      <pubDate>Mon, 28 Jun 2021 09:00:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/guias/sdk/</guid>
      <description>
        
        
        &lt;br&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;SDK é a abreviação de Software Development Kit ou, em português, Kit de Desenvolvimento de Software. Um SDK é um conjunto de ferramentas de desenvolvimento de software capaz de facilitar a integração de sistemas em diferentes linguagens de programação. Além disso, usando um SDK é possível ter mais segurança e confiabilidade no processo de integração.&lt;/p&gt;
&lt;p&gt;Construímos a Conta Stone SDK com o objetivo de permitir que parceiros como plataformas e ERPs possam realizar o processo de abertura de conta Stone sem que seus usuários tenham que fazer o download do nosso aplicativo (iOS e Android).
&lt;br&gt;Assim, de maneira segura, os usuários poderão realizar os processos de autenticação e KYC interagindo de maneira direta com a Stone, mas por meio da SDK integrada pelo parceiro.&lt;/p&gt;
&lt;p&gt;A Conta Stone SDK funciona como ponto de entrada para os três processos abaixo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SDK de Autenticação (Auth SDK): responsável por executar o processo de Autenticação seguindo os padrões especificados.&lt;/li&gt;
&lt;li&gt;Verificação de KYC (Pegasus SDK):  responsável por capturar as informações do usuário que está realizando cadastro na conta.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Após obter o seu &lt;a href=&#34;https://stone-co.github.io/docs/guias/token-de-acesso/&#34;&gt;Token de Acesso&lt;/a&gt;, caso deseje usar nossa SDK e disponibilizar as etapas acima descritas aos seus usuários, siga os próximos passos para instalação do kit para &lt;a href=&#34;https://stone-co.github.io/docs/guias/sdk/#integração-ios&#34;&gt;iOS&lt;/a&gt; e &lt;a href=&#34;https://stone-co.github.io/docs/guias/sdk/#integração-android&#34;&gt;Android&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;integração-android&#34;&gt;Integração Android&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;p&gt;A Conta Stone SDK é responsável por todo o fluxo de login e Know Your Customer da &lt;a href=&#34;https://stone-co.github.io/docs/guias/stone-open-banking/overview/&#34;&gt;Stone Openbank API&lt;/a&gt;.&lt;/p&gt;
&lt;h5 id=&#34;contato&#34;&gt;&lt;strong&gt;Contato&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;Se durante a integração você encontrar algum problema ou ponto de melhoria, entre em contato com a gente através da ferramenta de suporte.&lt;/p&gt;
&lt;h5 id=&#34;como-funciona&#34;&gt;&lt;strong&gt;Como funciona&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;A Conta Stone SDK é o ponto de entrada para acesso às nossas SDKs de autenticação, aprovação e verificação de &lt;a href=&#34;https://en.wikipedia.org/wiki/Know_your_customer&#34;&gt;KYC&lt;/a&gt; (&lt;em&gt;Know Your Customer&lt;/em&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A SDK de autenticação é responsável por executar todo o processo de autenticação seguindo as diretrizes do &lt;a href=&#34;https://oauth.net/2/&#34;&gt;OAuth2&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A SDK de aprovação é responsável pelo processo de aprovação e rejeição de transações.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A SDK de KYC é responsável por capturar as informações do usuário que está realizando cadastro na conta.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h5 id=&#34;como-integrar-com-a-conta-stone-sdk&#34;&gt;&lt;strong&gt;Como Integrar com a Conta Stone SDk&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;Antes de começar a integração é necessário obter uma chave de acesso ao repositório, pois trata-se de um repositório privado. Para obter essa chave, entre em contato com a gente.&lt;/p&gt;
&lt;p&gt;No arquivo &lt;code&gt;build.gradle&lt;/code&gt; do projeto, adicione a URL do repositório e substitua o &lt;code&gt;{access-key}&lt;/code&gt; pela chave fornecida.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;maven { url &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;https://packagecloud.io/priv/${access-key}/Stone/stoneid/maven2&amp;#34;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Também é preciso adicionar o Jetpack, pois usamos algumas libs que estão disponíveis nesse repositório.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;maven { url &amp;#39;https:&lt;span style=&#34;color:#6272a4&#34;&gt;//jitpack.io&amp;#39; }
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Importe a dependência da Conta Stone SDK.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;implementation &amp;#39;co.stone:stone-android:${latest_version}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A Conta Stone SDK utiliza o Firebase para implementar alguns de seus serviços, logo é necessário ter um projeto no Firebase e integrá-lo no seu app. Para mais informações sobre como adicionar o Firebase ao seu projeto, acesse este &lt;a href=&#34;https://firebase.google.com/docs/android/setup&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sincronize o projeto e pronto, já é possível utilizar a Conta Stone SDK!&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;inicializando-a-sdk&#34;&gt;&lt;strong&gt;Inicializando a SDK&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;Uma vez que a dependência foi importada, o passo seguinte da integração é inicializar a SDK no seu &lt;code&gt;Application&lt;/code&gt;. Para isso é necessário especificar os parâmetros abaixo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;App&lt;/span&gt; : Application() {

	&lt;span style=&#34;color:#ff79c6&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;val&lt;/span&gt; environment = Environment.SANDBOX

	&lt;span style=&#34;color:#ff79c6&#34;&gt;val&lt;/span&gt; stoneSdk &lt;span style=&#34;color:#ff79c6&#34;&gt;by&lt;/span&gt; lazy {
        Stone.init(
            &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;,
            environment,
            AppInfo(
                name = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;YOUR_APP_NAME&amp;#34;&lt;/span&gt;,
                version = BuildConfig.VERSION_NAME,
                buildId = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;NA&amp;#34;&lt;/span&gt;,
                applicationId = BuildConfig.APPLICATION_ID,
                themeId = R.style.YOUR_APP_THEME
            ),
            AuthInfo(
                clientId = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;YOUR_CLIENT_ID&amp;#34;&lt;/span&gt;,
                tokenMasterKeyUri = URI(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;android-keystore://cssdk-sample-token-key&amp;#34;&lt;/span&gt;),
                httpClientConfig = HttpClientConfig()
            ),
            DeepLinkUris(
                uriLogout = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.logout&amp;#34;&lt;/span&gt;,
                uriChat = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.chat&amp;#34;&lt;/span&gt;,
                uriHelp = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.help&amp;#34;&lt;/span&gt;,
                uriKyc = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.kyc&amp;#34;&lt;/span&gt;,
                uriUpdateApp = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.forceupdate&amp;#34;&lt;/span&gt;,
                uriDashboard = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.dashboard&amp;#34;&lt;/span&gt;
            )
        )
    }

    &lt;span style=&#34;color:#ff79c6&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;attachBaseContext&lt;/span&gt;(base: Context) {
        &lt;span style=&#34;color:#ff79c6&#34;&gt;super&lt;/span&gt;.attachBaseContext(base)
        StoneContext.setContext(base)
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;application&lt;/code&gt;: Trata-se da instância do &lt;code&gt;Application&lt;/code&gt; do seu app;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;environment&lt;/code&gt;: Existem 3 ambientes para os quais a SDK pode apontar: &lt;code&gt;HOMOLOGUE&lt;/code&gt;, &lt;code&gt;SANDBOX&lt;/code&gt; e &lt;code&gt;PRODUCTION&lt;/code&gt;. Para fins de teste, use o &lt;code&gt;Environment.SANDBOX&lt;/code&gt;;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;appInfo&lt;/code&gt;: Informações referentes ao app como nome, versão e buildId;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;authInfo&lt;/code&gt;: Informações referentes a autenticação como clientId (fornecido pelo time de suporte OpenBank), configuração do &lt;code&gt;OkHttp&lt;/code&gt; e URI para a chave mestra no formato &lt;code&gt;android-keystore://&lt;/code&gt; (será utilizada para acessar o Keystore do Android e salvar o token do usuário de forma segura);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;deepLinkUris&lt;/code&gt;: URIs usadas para fazer a navegação para Activities externas à SDK. Exemplo: a &lt;code&gt;uriLogout&lt;/code&gt; se refere à Activity para a qual o usuário deve ser redirecionado depois que ele for deslogado do app. Essa navegação é feita por deeplink;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;StoneContext.setContext()&lt;/code&gt;: Precisamos ter acesso ao &lt;code&gt;Context&lt;/code&gt; da aplicação para realizar algumas operações internas relacionadas ao ciclo de vida do app.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h5 id=&#34;iniciando-fluxo-de-autenticação-e-verificação-de-kyc&#34;&gt;&lt;strong&gt;Iniciando fluxo de Autenticação e verificação de KYC&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;Para iniciar o fluxo de autenticação e verificação de KYC, é necessário chamar o método abaixo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;stoneSdk.session
	.verify(activity = &lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;, params = SessionVerificationParams(Full))
	.runAsync(
		onSuccess = { result -&amp;gt; &lt;span style=&#34;color:#6272a4&#34;&gt;/* HANDLE RESULT */&lt;/span&gt; },
		onFailure = { error -&amp;gt; &lt;span style=&#34;color:#6272a4&#34;&gt;/* HANDLE ERROR */&lt;/span&gt; }
	)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esse método inicia a Activity principal da SDK e executa os fluxos internos de autenticação e verificação de KYC. Quando o processo é finalizado, a Conta Stone SDK retorna um &lt;code&gt;FlowResult&lt;/code&gt; que deve ser tratado pelo app.&lt;/p&gt;
&lt;br&gt;
&lt;h5 id=&#34;lidando-com-o-resultado-da-sdk&#34;&gt;&lt;strong&gt;Lidando com o resultado da SDK&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;Ao finalizar o fluxo de autenticação e verificação, a SDK emite um resultado para o app informando o desfecho do fluxo. Segue abaixo um exemplo de como tratar o resultado emitido pela Conta Stone SDK e o que cada um significa.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;when&lt;/span&gt; (result) {
	&lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; FlowResult.Completed -&amp;gt; handleSuccess()
	&lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; FlowResult.Cancelled -&amp;gt; handleCancellation()
	&lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; FlowResult.Failed -&amp;gt; handleError()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h5 id=&#34;como-fazer-logout&#34;&gt;&lt;strong&gt;Como fazer logout&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;Para deslogar o usuário, podemos fazer uma chamada para o método de logout seguindo o exemplo abaixo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;stoneSdk.auth
	.logout()
	.runAsync(
		onSuccess = { &lt;span style=&#34;color:#6272a4&#34;&gt;/* HANDLE SUCCESS */&lt;/span&gt; },
		onFailure = { error -&amp;gt; &lt;span style=&#34;color:#6272a4&#34;&gt;/* HANDLE ERROR */&lt;/span&gt; }
	)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h5 id=&#34;obtendo-o-client-autenticado&#34;&gt;&lt;strong&gt;Obtendo o Client autenticado&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;A authSDK é responsável por todo o processo de autenticação, incluindo a adição do token no header das chamadas para a API do Stone Openbank. Para isso a SDK fornece um &lt;code&gt;OkHttpClient&lt;/code&gt; configurado que pode ser utilizado nas chamadas HTTP do seu app. Esse client possui &lt;a href=&#34;https://owasp.org/www-community/controls/Certificate_and_Public_Key_Pinning&#34;&gt;certificate pinning&lt;/a&gt; com os certificados da API do Stone OpenBank e é possível acessá-lo chamando o método &lt;code&gt;stoneSdk.auth.getOkHttpClient()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;suspend&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;getInstitutions&lt;/span&gt;(): List&amp;lt;Institution&amp;gt; {
	&lt;span style=&#34;color:#ff79c6&#34;&gt;val&lt;/span&gt; httpService = HttpService.BankingGatewaySandbox

	&lt;span style=&#34;color:#ff79c6&#34;&gt;val&lt;/span&gt; client = stoneSdk.auth.getOkHttpClient().run()

	&lt;span style=&#34;color:#ff79c6&#34;&gt;val&lt;/span&gt; request = Request.Builder()
		.url(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${httpService.url}/api/v1/institutions&amp;#34;&lt;/span&gt;)
		.&lt;span style=&#34;color:#ff79c6&#34;&gt;get&lt;/span&gt;()
		.build()

	&lt;span style=&#34;color:#ff79c6&#34;&gt;val&lt;/span&gt; response = client.newCall(request).execute()

	&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; InstitutionMapper.toDomain(response)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;!---
##### **Como inicializar o Aprovador**
---
Para iniciar o aprovador é necessário fazer a chamada conforme o exemplo abaixo:

```kotlin
stoneSdk.approver
	.manageApprovals(activity = this, params = ManageApprovalsParams(approverAccountInfo))
	.runAsync(
		onSuccess = { result -&gt; /* HANDLE RESULT */ },
		onFailure = { error -&gt; /* HANDLE ERROR */ }
	)
```

Para recuperar o `approverAccountInfo` a Conta Stone SDK disponibiliza a sessão do usuário logado com todas as informações que o `ApproverAccountInfo` precisa:

```kotlin
stoneSdk.session
	.getSession()
	.runAsync(
		onSuccess = { session -&gt; 
			val currentaccount = session.currentAccountOrThrow

			val approverAccountInfo = ApproverAccountInfo(
                userId = session.user.id,
                userName = session.user.name,
                accountOwner = currentaccount.owner.name,
                accountOwnerDocument = currentaccount.owner.document,
                accountNumber = currentaccount.payment.accountCode,
                bankName = StoneOpenBank.institutionName,
                bankNumber = StoneOpenBank.institutionCode,
                branchNumber = StoneOpenBank.agencyCode
            )
 		},
		onFailure = { error -&gt; /* HANDLE ERROR */ }
	)
```
---&gt;
&lt;h5 id=&#34;integração-com-coroutines-e-rxjava&#34;&gt;&lt;strong&gt;Integração com Coroutines e RxJava&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;A API pública da Conta Stone SDK retorna sempre um &lt;code&gt;Runnable&amp;lt;T&amp;gt;&lt;/code&gt;, com ele é possível escolher de qual forma deseja executar a operação:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;runAsync()&lt;/code&gt;: utiliza callbacks (útil se você estiver utilizando Java)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;run()&lt;/code&gt; e &lt;code&gt;runCatching()&lt;/code&gt;: são &lt;code&gt;suspend fun&lt;/code&gt;, devem ser chamadas dentro de um Coroutine Scope (recomendado para quem utiliza Kotlin)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asFlow()&lt;/code&gt;: retorna um &lt;code&gt;Flow&lt;/code&gt; do Coroutines&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asSingle()&lt;/code&gt;, &lt;code&gt;asObservable()&lt;/code&gt;, &lt;code&gt;asCompletable()&lt;/code&gt; e &lt;code&gt;asFlowable()&lt;/code&gt;: integração com RxJava&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Exemplo com Coroutines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;viewModelScope.launch {
	&lt;span style=&#34;color:#ff79c6&#34;&gt;val&lt;/span&gt; session = stoneSdk.session.getSession().run()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Exemplo com RxJava:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;stoneSdk.session
	.getSession()
	.asSingle()
	.subscribeBy(
		onSuccess = { session -&amp;gt; ... },
		onError = { error -&amp;gt; ... } 
	)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h2 id=&#34;integração-ios&#34;&gt;Integração iOS&lt;/h2&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h5 id=&#34;contato-1&#34;&gt;&lt;strong&gt;Contato&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;Se durante a integração encontrar algum problema ou ponto de melhoria, entre em contato com a gente através da ferramenta de suporte.&lt;/p&gt;
&lt;h5 id=&#34;instalação&#34;&gt;&lt;strong&gt;Instalação&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;h6 id=&#34;requisitos&#34;&gt;&lt;strong&gt;Requisitos&lt;/strong&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0&lt;/li&gt;
&lt;li&gt;Xcode 11.7&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h6 id=&#34;configuração&#34;&gt;&lt;strong&gt;Configuração&lt;/strong&gt;&lt;/h6&gt;
&lt;p&gt;Antes de começar a usar a Conta Stone SDK, é necessário seguir alguns procedimentos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/stone-co/conta-stone-sdk-sample-ios/releases/tag/0.2.0&#34;&gt;Baixe o arquivo zip&lt;/a&gt; no link com os frameworks necessários.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extraia a pasta Frameworks no diretório raiz do projeto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No target do projeto, acesse a guia &lt;code&gt;General&lt;/code&gt; e, em &lt;code&gt;Frameworks, Libraries, and Embedded Content&lt;/code&gt;, adicione os frameworks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ContaStoneSDK.framework&lt;/li&gt;
&lt;li&gt;CryptoSwift.framework&lt;/li&gt;
&lt;li&gt;JOSESwift.framework&lt;/li&gt;
&lt;li&gt;TinyConstraints.framework&lt;/li&gt;
&lt;li&gt;XCoordinator.framework&lt;/li&gt;
&lt;/ul&gt;
 &lt;br&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Na guia &lt;code&gt;Build Settings&lt;/code&gt;, em &lt;code&gt;Build Options&lt;/code&gt;, selecione &lt;code&gt;NO&lt;/code&gt; para a configuração &lt;code&gt;Enable Bitcode&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Na guia &lt;code&gt;Build Settings&lt;/code&gt;, em &lt;code&gt;Runpath Search Paths&lt;/code&gt;, adicione a entrada &lt;code&gt;@executable_path/Frameworks/ContaStoneSDK.framework/Frameworks/&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Logo abaixo em &lt;code&gt;Framework Search Paths&lt;/code&gt;, adicione a entrada &lt;code&gt;$(PROJECT_DIR)/Frameworks/ContaStoneSDK.framework/Frameworks/&lt;/code&gt; no modo recursivo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Em &lt;code&gt;Build Phases&lt;/code&gt; adicione um novo script chamado &amp;ldquo;Sign&amp;rdquo; (em Build Phases, clique sinal de &amp;ldquo;mais&amp;rdquo; e selecione New Run Script Phase).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;pushd ${TARGET_BUILD_DIR}&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;${PRODUCT_NAME}.app&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;Frameworks&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;ContaStoneSDK.framework&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;Frameworks

&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; EACH &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;.framework; &lt;span style=&#34;color:#ff79c6&#34;&gt;do&lt;/span&gt;
	echo &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;-- signing ${EACH}&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;bin&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;codesign &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;force &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;deep &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;sign &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${EXPANDED_CODE_SIGN_IDENTITY}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;entitlements &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${TARGET_TEMP_DIR}/${PRODUCT_NAME}.app.xcent&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;timestamp=&lt;span style=&#34;color:#ff79c6&#34;&gt;none&lt;/span&gt;
	$EACH
done

popd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Adicione dependências:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;// Cocoapods&lt;/span&gt;

pod &amp;#39;Alamofire&amp;#39;, &amp;#39;&lt;span style=&#34;color:#bd93f9&#34;&gt;4.8&lt;/span&gt;.&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&amp;#39;
pod &amp;#39;RxSwift&amp;#39;, &amp;#39;&lt;span style=&#34;color:#ff79c6&#34;&gt;~&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;&amp;#39;
pod &amp;#39;RxCocoa&amp;#39;, &amp;#39;&lt;span style=&#34;color:#ff79c6&#34;&gt;~&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;&amp;#39;
pod &amp;#39;lottie&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;ios&amp;#39;, &amp;#39;&lt;span style=&#34;color:#bd93f9&#34;&gt;3.1&lt;/span&gt;.&lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;&amp;#39;
pod &amp;#39;AloeStackView&amp;#39;, &amp;#39;&lt;span style=&#34;color:#bd93f9&#34;&gt;1.2&lt;/span&gt;.&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;&amp;#39;

&lt;span style=&#34;color:#6272a4&#34;&gt;// Carthage&lt;/span&gt;

github &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Alamofire/Alamofire&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;4.8.2&amp;#34;&lt;/span&gt;
github &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;ReactiveX/RxSwift&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;5.1.1&amp;#34;&lt;/span&gt;
github &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;airbnb/lottie-ios&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;3.1.6&amp;#34;&lt;/span&gt;
github &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;airbnb/AloeStackView&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;v1.2.0&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;uso&#34;&gt;&lt;strong&gt;USO&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;h6 id=&#34;configurando-o-appdelegate&#34;&gt;&lt;strong&gt;Configurando o AppDelegate&lt;/strong&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UIKit&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ContaStoneSDK&lt;/span&gt;

&lt;span style=&#34;color:#ff79c6&#34;&gt;@UIApplicationMain&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AppDelegate&lt;/span&gt;: UIResponder, UIApplicationDelegate {
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;application&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;_&lt;/span&gt; application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;Any&lt;/span&gt;]?) -&amp;gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;Bool&lt;/span&gt; {
		ContaStone.configure(
			id: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;john.doe@openbank.com&amp;#34;&lt;/span&gt;,
			scopes: [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;offline_access&amp;#34;&lt;/span&gt;],
			environmentType: .sandbox, &lt;span style=&#34;color:#6272a4&#34;&gt;// .homol, .sandbox, .production&lt;/span&gt;
			delegate: &lt;span style=&#34;color:#ff79c6&#34;&gt;self&lt;/span&gt;
		)

		&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;
	}
}

&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;extension&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AppDelegate&lt;/span&gt;: ContaStoneDelegate {
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;refreshApp&lt;/span&gt;() {}
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;sessionRevoked&lt;/span&gt;() {}
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;loggedOut&lt;/span&gt;() {}
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;showHelpCenter&lt;/span&gt;() {}
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;showChat&lt;/span&gt;() {}
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;showFrequentlyAskedQuestions&lt;/span&gt;() {}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;autenticação&#34;&gt;&lt;strong&gt;Autenticação&lt;/strong&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UIKit&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ContaStoneSDK&lt;/span&gt;

&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ViewController&lt;/span&gt;: UIViewController {
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;checkAuthenticationState&lt;/span&gt;() {
		&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; ContaStone.isAuthenticated {
			ContaStone.currentAcount.name &lt;span style=&#34;color:#6272a4&#34;&gt;// John Doe Inc&lt;/span&gt;
		} &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; {
			ContaStone.login(checkKYC: &lt;span style=&#34;color:#ff79c6&#34;&gt;true&lt;/span&gt;) { &lt;span style=&#34;color:#6272a4&#34;&gt;/* callback */&lt;/span&gt; }
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;logout&#34;&gt;&lt;strong&gt;Logout&lt;/strong&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;UIKit&lt;/span&gt;
&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ContaStoneSDK&lt;/span&gt;

&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ViewController&lt;/span&gt;: UIViewController {
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;logout&lt;/span&gt;() {
		ContaStone.logout { &lt;span style=&#34;color:#6272a4&#34;&gt;/* callback */&lt;/span&gt; }
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!---
##### **Aprovador**

```swift
	var approverCoordinator: ApproverCoordinator?

	func showApprover() {
        let coordiantor = ApproverCoordinator() { _ in
            self.approverCoordinator = nil
        }
        present(coordiantor.rootViewController, animated: true, completion: nil)

        approverCoordinator = coordiantor // Holds the instance
	}
```
---&gt;
&lt;h6 id=&#34;requisições&#34;&gt;&lt;strong&gt;Requisições&lt;/strong&gt;&lt;/h6&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ViewController&lt;/span&gt;: UIViewController {
	&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;fetchBalance&lt;/span&gt;() {
	   &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt; = ContaStone.currentAcount.id
	   &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;endpoint&lt;/span&gt; = Endpoint&amp;lt;BalanceResponse&amp;gt;(method: .&lt;span style=&#34;color:#ff79c6&#34;&gt;get&lt;/span&gt;, path: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/api/v1/accounts/&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;\(&lt;/span&gt;id&lt;span style=&#34;color:#f1fa8c&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;/balance&amp;#34;&lt;/span&gt;)

	   ContaStone.performRequest(endpoint) { result &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt;
			&lt;span style=&#34;color:#ff79c6&#34;&gt;switch&lt;/span&gt; result {
			&lt;span style=&#34;color:#ff79c6&#34;&gt;case&lt;/span&gt; .success(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;response&lt;/span&gt;):
				&lt;span style=&#34;color:#6272a4&#34;&gt;/* callback */&lt;/span&gt;

			&lt;span style=&#34;color:#ff79c6&#34;&gt;case&lt;/span&gt; .failure(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;error&lt;/span&gt;):
				&lt;span style=&#34;color:#6272a4&#34;&gt;/* callback */&lt;/span&gt;
		   }
	   }
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h5 id=&#34;exemplo&#34;&gt;&lt;strong&gt;Exemplo&lt;/strong&gt;&lt;/h5&gt;
&lt;hr&gt;
&lt;p&gt;Antes de abrir o projeto de exemplo, é necessário executar o script de bootstrap.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bootstrap
open Sample.xcworkspace
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
  </channel>
</rss>
