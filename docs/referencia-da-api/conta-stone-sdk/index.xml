<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stone OpenBank – Conta Stone SDK (Beta)</title>
    <link>https://stone-co.github.io/docs/referencia-da-api/conta-stone-sdk/</link>
    <description>Recent content in Conta Stone SDK (Beta) on Stone OpenBank</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 17 Sep 2020 18:00:00 -0300</lastBuildDate>
    
	  <atom:link href="https://stone-co.github.io/docs/referencia-da-api/conta-stone-sdk/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Overview</title>
      <link>https://stone-co.github.io/docs/referencia-da-api/conta-stone-sdk/overview/</link>
      <pubDate>Tue, 19 Nov 2019 14:32:50 +0000</pubDate>
      
      <guid>https://stone-co.github.io/docs/referencia-da-api/conta-stone-sdk/overview/</guid>
      <description>
        
        
        &lt;br&gt;
&lt;p&gt;Sejam bem-vindos à documentação da Conta Stone SDK. Através da Conta Stone SDK é possível fazer o processo de abertura de conta e login no Stone OpenBank.&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;introdução&#34;&gt;&lt;strong&gt;Introdução&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;A Conta Stone SDK é o ponto de entrada para acesso às nossas SDKs de autenticação (Auth SDK), aprovação (Approver SDK) e verificação de &lt;a href=&#34;https://en.wikipedia.org/wiki/Know_your_customer&#34;&gt;KYC&lt;/a&gt; (&lt;em&gt;Know your costumer&lt;/em&gt;) (Pegasus SDK).&lt;/p&gt;
&lt;p&gt;Segue abaixo um diagrama de como funciona a comunicação entre esses três atores.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../../docs/guias/conta-stone-sdk/overview/conta-stone-sdk-diagram.png&#34; alt=&#34;imagem_conta_stone_sdk_diagram&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Auth SDK - responsável por executar todo o processo de autenticação seguindo as diretrizes do &lt;a href=&#34;https://oauth.net/2/&#34;&gt;oAuth2&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Approver SDK - realiza todo o processo de aprovação e rejeição de transações.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pegasus SDK - SDK de KYC, responsável por capturar as informações do usuário que está realizando cadastro na conta.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4 id=&#34;como-integrar-com-a-sdk&#34;&gt;&lt;strong&gt;Como integrar com a SDK&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Antes de começar a integração é necessário obter uma chave de acesso ao nosso repositório. Para obter esta chave, entre em contato com a gente &lt;a href=&#34;https://app.pipefy.com/public/form/Qz4ptt_W?origem_do_lead=%22Documenta%C3%A7%C3%A3o%22&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para integrar com o &lt;strong&gt;iOS&lt;/strong&gt;, acesse &lt;a href=&#34;../../../docs/guias/conta-stone-sdk/sdk-sample-ios&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para integrar com o &lt;strong&gt;Android&lt;/strong&gt;, acesse &lt;a href=&#34;../../../docs/guias/conta-stone-sdk/sdk-sample-android&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Sample iOS</title>
      <link>https://stone-co.github.io/docs/referencia-da-api/conta-stone-sdk/sdk-sample-ios/</link>
      <pubDate>Sat, 20 Mar 2021 10:00:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/referencia-da-api/conta-stone-sdk/sdk-sample-ios/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;SDK de integração para iOS.&lt;/p&gt;
&lt;h4 id=&#34;contato&#34;&gt;&lt;strong&gt;Contato&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Se durante a integração encontrar algum problema ou ponto de melhoria entre em contato com a gente através do Azendoo.&lt;/p&gt;
&lt;h4 id=&#34;instalação&#34;&gt;&lt;strong&gt;Instalação&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;h5 id=&#34;requisitos&#34;&gt;&lt;strong&gt;Requisitos&lt;/strong&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0&lt;/li&gt;
&lt;li&gt;Xcode 11.7&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h5 id=&#34;configuração&#34;&gt;&lt;strong&gt;Configuração&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;Antes de começar a usar o ContaStoneSDK é necessário seguir alguns procedimentos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/stone-co/conta-stone-sdk-sample-ios/releases/tag/0.2.0&#34;&gt;Baixe o arquivo zip&lt;/a&gt; no link com os frameworks necessários.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extraia a pasta Frameworks no diretório raiz do projeto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No target do projeto acesse a guia &lt;code&gt;General&lt;/code&gt; e em &lt;code&gt;Frameworks, Libraries, and Embedded Content&lt;/code&gt; adicione os frameworks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ContaStoneSDK.framework&lt;/li&gt;
&lt;li&gt;CryptoSwift.framework&lt;/li&gt;
&lt;li&gt;JOSESwift.framework&lt;/li&gt;
&lt;li&gt;TinyConstraints.framework&lt;/li&gt;
&lt;li&gt;XCoordinator.framework&lt;/li&gt;
&lt;/ul&gt;
 &lt;br&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Na guia &lt;code&gt;Build Settings&lt;/code&gt;, em &lt;code&gt;Build Options&lt;/code&gt;, selecione &lt;code&gt;NO&lt;/code&gt; para a configuração &lt;code&gt;Enable Bitcode&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Na guia &lt;code&gt;Build Settings&lt;/code&gt;, em &lt;code&gt;Runpath Search Paths&lt;/code&gt;, adicione a entrada &lt;code&gt;@executable_path/Frameworks/ContaStoneSDK.framework/Frameworks/&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Logo abaixo em &lt;code&gt;Framework Search Paths&lt;/code&gt;, adicione a entrada &lt;code&gt;$(PROJECT_DIR)/Frameworks/ContaStoneSDK.framework/Frameworks/&lt;/code&gt; no modo recursivo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Em &lt;code&gt;Build Phases&lt;/code&gt; adicione um novo script chamado &amp;ldquo;Sign&amp;rdquo; (Em Build Phases, clique sinal de &amp;ldquo;mais&amp;rdquo; e selecione New Run Script Phase).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;pushd ${TARGET_BUILD_DIR}&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;${PRODUCT_NAME}&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;app&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;Frameworks&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;ContaStoneSDK&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;framework&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;Frameworks

&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; EACH &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*.&lt;/span&gt;framework; do
	echo &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;-- signing ${EACH}&amp;#34;&lt;/span&gt;
	&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;bin&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;codesign &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;force &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;deep &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;sign &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${EXPANDED_CODE_SIGN_IDENTITY}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;entitlements &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${TARGET_TEMP_DIR}/${PRODUCT_NAME}.app.xcent&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;timestamp&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;none
	$EACH
done

popd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Adicione dependências:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;//&lt;/span&gt; Cocoapods

pod &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Alamofire&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;4.8.2&amp;#39;&lt;/span&gt;
pod &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;RxSwift&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;~&amp;gt; 5&amp;#39;&lt;/span&gt;
pod &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;RxCocoa&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;~&amp;gt; 5&amp;#39;&lt;/span&gt;
pod &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;lottie-ios&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;3.1.6&amp;#39;&lt;/span&gt;
pod &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;AloeStackView&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;1.2.0&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#ff79c6&#34;&gt;//&lt;/span&gt; Carthage

github &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Alamofire/Alamofire&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;4.8.2&amp;#34;&lt;/span&gt;
github &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;ReactiveX/RxSwift&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;5.1.1&amp;#34;&lt;/span&gt;
github &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;airbnb/lottie-ios&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;3.1.6&amp;#34;&lt;/span&gt;
github &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;airbnb/AloeStackView&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;v1.2.0&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;uso&#34;&gt;&lt;strong&gt;USO&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;h5 id=&#34;configurando-o-appdelegate&#34;&gt;&lt;strong&gt;Configurando o AppDelegate&lt;/strong&gt;&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; UIKit
&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; ContaStoneSDK

@UIApplicationMain
&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;AppDelegate&lt;/span&gt;: UIResponder, UIApplicationDelegate {
	func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;LaunchOptionsKey: Any]?) &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; Bool {
		ContaStone&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;configure(
			&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;john.doe@openbank.com&amp;#34;&lt;/span&gt;,
			scopes: [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;offline_access&amp;#34;&lt;/span&gt;],
			environmentType: &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sandbox, &lt;span style=&#34;color:#ff79c6&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;homol, &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sandbox, &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;production
			delegate: self
		)

		&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; true
	}
}

extension AppDelegate: ContaStoneDelegate {
	func refreshApp() {}
	func sessionRevoked() {}
	func loggedOut() {}
	func showHelpCenter() {}
	func showChat() {}
	func showFrequentlyAskedQuestions() {}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;autenticação&#34;&gt;&lt;strong&gt;Autenticação&lt;/strong&gt;&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; UIKit
&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; ContaStoneSDK

&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ViewController&lt;/span&gt;: UIViewController {
	func checkAuthenticationState() {
		&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; ContaStone&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;isAuthenticated {
			ContaStone&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;currentAcount&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#ff79c6&#34;&gt;//&lt;/span&gt; John Doe Inc
		} &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; {
			ContaStone&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;login(checkKYC: true) { &lt;span style=&#34;color:#ff79c6&#34;&gt;/*&lt;/span&gt; callback &lt;span style=&#34;color:#ff79c6&#34;&gt;*/&lt;/span&gt; }
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;logout&#34;&gt;&lt;strong&gt;Logout&lt;/strong&gt;&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; UIKit
&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; ContaStoneSDK

&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ViewController&lt;/span&gt;: UIViewController {
	func logout() {
		ContaStone&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;logout { &lt;span style=&#34;color:#ff79c6&#34;&gt;/*&lt;/span&gt; callback &lt;span style=&#34;color:#ff79c6&#34;&gt;*/&lt;/span&gt; }
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;aprovador&#34;&gt;&lt;strong&gt;Aprovador&lt;/strong&gt;&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;	var approverCoordinator: ApproverCoordinator?

	func showApprover() {
        let coordiantor &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ApproverCoordinator() { _ &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt;
            self&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;approverCoordinator &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; nil
        }
        present(coordiantor&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;rootViewController, animated: true, completion: nil)

        approverCoordinator &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; coordiantor &lt;span style=&#34;color:#ff79c6&#34;&gt;//&lt;/span&gt; Holds the instance
	}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;requisições&#34;&gt;&lt;strong&gt;Requisições&lt;/strong&gt;&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;ViewController&lt;/span&gt;: UIViewController {
	func fetchBalance() {
	   let &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ContaStone&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;currentAcount&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;id
	   let endpoint &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Endpoint&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;BalanceResponse&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;(method: &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get, path: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/api/v1/accounts/\(id)/balance&amp;#34;&lt;/span&gt;)

	   ContaStone&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;performRequest(endpoint) { result &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt;
			switch result {
			case &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;success(let response):
				&lt;span style=&#34;color:#ff79c6&#34;&gt;/*&lt;/span&gt; callback &lt;span style=&#34;color:#ff79c6&#34;&gt;*/&lt;/span&gt;

			case &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;failure(let error):
				&lt;span style=&#34;color:#ff79c6&#34;&gt;/*&lt;/span&gt; callback &lt;span style=&#34;color:#ff79c6&#34;&gt;*/&lt;/span&gt;
		   }
	   }
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h4 id=&#34;exemplo&#34;&gt;&lt;strong&gt;Exemplo&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Antes de abrir o projeto de exemplo, é necessário executar o script de bootstrap.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bootstrap
open Sample.xcworkspace
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Sample Android</title>
      <link>https://stone-co.github.io/docs/referencia-da-api/conta-stone-sdk/sdk-sample-android/</link>
      <pubDate>Sat, 20 Mar 2021 10:00:00 -0300</pubDate>
      
      <guid>https://stone-co.github.io/docs/referencia-da-api/conta-stone-sdk/sdk-sample-android/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;p&gt;SDK de integração para Android.&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;A Conta Stone SDK é responsável por todo o fluxo de login e Know Your Customer da &lt;a href=&#34;../../../docs/guias/stone-openbank-api&#34;&gt;Stone Openbank API&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;contato&#34;&gt;&lt;strong&gt;Contato&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Se durante a integração encontrar algum problema ou ponto de melhoria entre em contato com a gente através do Azendoo.&lt;/p&gt;
&lt;h4 id=&#34;como-funciona&#34;&gt;&lt;strong&gt;Como funciona&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;A Conta Stone SDK é o ponto de entrada para acesso às nossas SDKs de autenticação, aprovação e verificação de &lt;a href=&#34;https://en.wikipedia.org/wiki/Know_your_customer&#34;&gt;KYC&lt;/a&gt; (&lt;em&gt;Know your constumer&lt;/em&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A SDK de autenticação é responsável por executar todo o processo de autenticação seguindo as diretrizes do &lt;a href=&#34;https://oauth.net/2/&#34;&gt;oAuth2&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A SDK de aprovação é responsável pelo processo de aprovação e rejeição de transações.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A SDK de KYC é responsável por capturar as informações do usuário que está realizando cadastro na conta.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4 id=&#34;como-integrar-com-a-conta-stone-sdk&#34;&gt;&lt;strong&gt;Como Integrar com a Conta Stone SDk&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Antes de começar a integração é necessário obter uma chave de acesso ao repositório, pois trata-se de um repositório privado. Para obter esta chave entre em contato com a gente.&lt;/p&gt;
&lt;p&gt;No arquivo &lt;code&gt;build.gradle&lt;/code&gt; do projeto adicione a URL do repositório e substitua o &lt;code&gt;{access-key}&lt;/code&gt; pela chave fornecida.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;maven { url &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;https://packagecloud.io/priv/${access-key}/Stone/stoneid/maven2&amp;#34;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Também é preciso adicionar o Jetpack, pois usamos algumas libs que estão disponíveis neste repositório.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;maven { url &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;https://jitpack.io&amp;#39;&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Importe a dependência da Conta Stone SDK.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;implementation &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;co.stone:conta:${latest_version}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A Conta Stone SDK utiliza o Firebase para implementar alguns de seus serviços, logo é necessário ter um projeto no firebase e integrá-lo no seu app. Para mais informações sobre como adicionar o Firebase ao seu projeto acesse este &lt;a href=&#34;https://firebase.google.com/docs/android/setup&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sincronize o projeto e pronto, já é possível utilizar a Conta Stone SDK!&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;inicializando-a-sdk&#34;&gt;&lt;strong&gt;Inicializando a SDK&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Uma vez que a dependência foi importada o passo seguinte da integração é inicializar a SDK no seu app, para isso é necessário especificar os parâmetros abaixo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;private val environment &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Environment&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Sandbox

 ContaStone&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;initialize(
            application &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; application,
            environment &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; environment,
            appInfo &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; AppInfo(
                name &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Conta Stone Sample App&amp;#34;&lt;/span&gt;,
                applicationId &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; BuildConfig&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;APPLICATION_ID,
                buildId &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; BuildConfig&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;BUILD_TYPE,
                version &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; BuildConfig&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;VERSION_NAME
            ),
            authFlowUIConfig &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; AuthFlowUIConfig(themeId &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; R&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;style&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Theme_ContaStoneSdkSample),
            clientId &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;myapp@example.com.br&amp;#34;&lt;/span&gt;,
            deepLinkUris &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; DeepLinkUris(
                uriLogout &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.logout&amp;#34;&lt;/span&gt;,
                uriChat &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.chat&amp;#34;&lt;/span&gt;,
                uriDashboard &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample//uri.dashboard&amp;#34;&lt;/span&gt;,
                uriHelp &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.help&amp;#34;&lt;/span&gt;,
                uriKyc &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.kyc&amp;#34;&lt;/span&gt;,
                uriUpdateApp &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;sample://uri.update.app&amp;#34;&lt;/span&gt;
            ),
            httpClientConfig &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; HttpClientConfig(),
            logger &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; InternalLogger(),
            tokenKeyMasterUri &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;  URI(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;android-keystore://stone-mobile&amp;#34;&lt;/span&gt;)
        )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;application&lt;/code&gt;: Trata-se da instância do Application do seu app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;environment&lt;/code&gt;: Existem 3 ambientes para os quais a sdk pode apontar: &lt;code&gt;Homolog&lt;/code&gt;, &lt;code&gt;Sandbox&lt;/code&gt; e &lt;code&gt;Production&lt;/code&gt; para fins de teste use o &lt;code&gt;Environment.Sandbox&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;appInfo&lt;/code&gt;: Informações referentes ao app como nome, versão e buildId.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;client_id&lt;/code&gt;: Identificador fornecido pelo time de suporte OpenBank.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;authFlowUIConfig&lt;/code&gt;: Com esta configuração é possível passar o tema da sua aplicação para a SDK, assim as cores principais do estilo do seu app serão aplicadas nas telas internas da SDK.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;httpClientConfig&lt;/code&gt;: Trata-se de configurações HTTP customizadas do cliente, como &lt;code&gt;interceptors&lt;/code&gt;, &lt;code&gt;connectionTimeoutMs&lt;/code&gt;, &lt;code&gt;readTimeoutMs&lt;/code&gt;, &lt;code&gt;writeTimeoutMs&lt;/code&gt; e &lt;code&gt;networkInterceptors&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;tokenKeyMasterUri&lt;/code&gt;: Uma URI para a chave mestra no formato &lt;code&gt;android-keystore://&lt;/code&gt;. Essa chave será utilizada para acessar o Keystore do android e salvar o token do usuário de forma segura.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;deepLinkUris&lt;/code&gt;: Uris usadas para fazer a navegação para Activities externas a sdk. Exemplo, a &lt;code&gt;uriLogout&lt;/code&gt; se refere a Activity que o usuário deve ser redirecionada depois que ele for deslogada do app, essa navegação é feita por deeplink.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4 id=&#34;iniciando-fluxo-de-autenticação-e-verificação-de-kyc&#34;&gt;&lt;strong&gt;Iniciando fluxo de Autenticação e verificação de KYC&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Para iniciar o fluxo de autenticação e verificação de KYC é necessário chamar o método abaixo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;contaStoneSdk&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;startAuthAndVerificationFlowForResult(
            context &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; this,
            params &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; VerificationParams(
                launchMode &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; VerificationLaunchMode&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;StartingApp,
                authMode &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; AuthFlowMode&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;RegisteredUser
            ),
            requestCode &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; LOGIN_RC
        )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O atributo &lt;code&gt;params&lt;/code&gt; recebe dois argumentos: O modo de inicialização, o qual define como que o fluxo deve ser iniciado e o &lt;code&gt;authMode&lt;/code&gt; que neste caso sempre vai ser &lt;code&gt;AuthFlowMode.RegisteredUser&lt;/code&gt;. O modo de inicialização pode ser:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;StartingApp&lt;/code&gt; - Inicia todo o fluxo de autenticação e check de KYC.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;AccountSelectionRequest&lt;/code&gt; - Exibe a tela de troca de conta e lida com a escolha do usuário nos casos em que o usuário em questão possui mais de uma conta de pagamento.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PushNotificationReceived&lt;/code&gt; - Deve ser iniciado ao receber um push notification referente ao processo de abertura de conta.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NewAccountCreated&lt;/code&gt; - Deve ser chamado após a criação de uma nova conta de pagamento para que seja verificado se esta conta não possui nenhuma pendência em seu cadastro.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Este método inicia a Activity principal da SDK e executa os fluxos internos de autenticação e verificação de KYC. Quando o processo é finalizado a Conta Stone SDK retorna um &lt;code&gt;Result&lt;/code&gt; através do &lt;code&gt;onActivityResult&lt;/code&gt; da Activity que deve ser tratado pelo app.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;lidando-com-o-resultado-da-sdk&#34;&gt;&lt;strong&gt;Lidando com o resultado da SDK&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Ao finalizar o fluxo de autenticação e verificação a SDK emite um resultado para o app informando o desfecho do fluxo. Segue abaixo um exemplo de como tratar o resultado emitido pela Conta Stone SDK e o que cada um significa.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt; override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
         &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;onActivityResult(requestCode, resultCode, data)
         &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (requestCode &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; LOGIN_RC) {
             val result &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; contaStoneSdk&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;parseAuthAndVerificationResult(data)
 
             when (result) {
                 &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; AuthAndVerificationResult&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Ok &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;User is authenticated&amp;#34;&lt;/span&gt;)
                 &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; AuthAndVerificationResult&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;MissingData &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;some information is missing&amp;#34;&lt;/span&gt;)
                 &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; AuthAndVerificationResult&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;UserCancelled &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;User cancelled flow&amp;#34;&lt;/span&gt;)
                 &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; AuthAndVerificationResult&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Error &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Error during login ${result.error}&amp;#34;&lt;/span&gt;)
                 &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; AuthAndVerificationResult&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;UserLoggedOut &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;User requests logout&amp;#34;&lt;/span&gt;)
                 &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; AuthAndVerificationResult&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;BlockedUser &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;User is blocked&amp;#34;&lt;/span&gt;)
             }
         }
     }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h4 id=&#34;como-fazer-logout&#34;&gt;&lt;strong&gt;Como fazer logout&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Para deslogar o usuário podemos fazer uma chamada para o método de logout seguindo o exemplo abaixo.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;contaStoneSdk&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;logout {
            &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (it &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; null) {
                toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Error on logout. Try again!&amp;#34;&lt;/span&gt;)
            } &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;user successfully logged out&amp;#34;&lt;/span&gt;)
        }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Quando a exception é nula o logout ocorreu com sucesso, quando não, algum erro ocorreu durante o fluxo.&lt;/p&gt;
&lt;br&gt;
&lt;h4 id=&#34;obtendo-o-client-autenticado&#34;&gt;&lt;strong&gt;Obtendo o Client autenticado&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;A authSDK é responsável por todo o processo de autenticação incluindo a adição do token no header das chamadas para a API do Stone Openbank. Para isso a SDK fornece um &lt;code&gt;OkHttpClient&lt;/code&gt; configurado que pode ser utilizado nas chamadas HTTP do seu app. Este client possui &lt;a href=&#34;https://owasp.org/www-community/controls/Certificate_and_Public_Key_Pinning&#34;&gt;certificate pinning&lt;/a&gt; com os certificados da API do Stone OpenBank e é possível acessá-lo chamando o método &lt;code&gt;contaStone.auth().client()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;private fun performAuthenticatedRequest() {
        val httpService &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; HttpService&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;BankingGatewaySandbox
        val client &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; contaStoneSdk&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;auth()&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;getOkHttpClient(httpService)

        val request &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Request&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Builder()
            &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;url(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;${httpService.url}/api/v1/institutions&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get()
            &lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;build()

        val callback &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;object&lt;/span&gt; : Callback {
            override fun onFailure(call: Call, e: IOException) {
                runOnMainThread {
                    toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Error fetching institutions $e&amp;#34;&lt;/span&gt;)
                }
            }

            override fun onResponse(call: Call, response: Response) {
                runOnMainThread {
                    toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Request executed successfully&amp;#34;&lt;/span&gt;)
                }
            }
        }

        client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;newCall(request)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;enqueue(callback)
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;h4 id=&#34;como-inicializar-o-aprovador&#34;&gt;&lt;strong&gt;Como inicializar o Aprovador&lt;/strong&gt;&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;Para conseguir iniciar o aprovador é necessário fazer a chamada conforme o exemplo abaixo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;contaStoneSdk&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;startApproverForResult(
                        source &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; this,
                        requestCode &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; APPROVER_RQ,
                        params &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ApproverParams(loggedAccount, ApproverLaunchMode&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;SDKLaunchMode)
                    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para recuperar o &lt;code&gt;loggedAccount&lt;/code&gt; a Conta Stone SDK disponibiliza a sessão do usuário logado com todas as informações que o &lt;code&gt;LoggedAccount&lt;/code&gt; precisa:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;contaStoneSdk&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;getSession(
                onComplete &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; { result &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt;
                    when (result) {
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; SessionResult&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Success &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; {
                                currentAccount?&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;paymentAccount?&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;let {
                                        LoggedAccountInfo(
                                            &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; it&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;id,
                                            accountNumber &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; it&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;accountCode,
                                            accountOwner &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; currentAccount?&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;owner?&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;name&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;orEmpty(),
                                            accountOwnerDocument &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; currentAccount?&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;owner?&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;document&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;orEmpty(),
                                            bankName &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Stone Pagamentos S.A&amp;#34;&lt;/span&gt;,
                                            bankNumber &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;197&amp;#34;&lt;/span&gt;,
                                            branchNumber &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;0001&amp;#34;&lt;/span&gt;,
                                            userLoggedName &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; profile&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;fullName
                                        )
                                    }
                                }
                        &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; SessionResult&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;HasNoActiveSession &lt;span style=&#34;color:#ff79c6&#34;&gt;-&amp;gt;&lt;/span&gt; redirectToLogin()
                    }
                },
                onError &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; {
                    toast(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Error trying to get session&amp;#34;&lt;/span&gt;)
                }
            )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
